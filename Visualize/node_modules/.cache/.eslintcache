[{"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/index.js":"1","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/App.js":"2","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorthome.js":"3","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/pathhome.js":"4","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/navbar.js":"5","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/singlebar.js":"6","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/details.js":"7","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/clearfuncs.js":"8","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/setup.js":"9","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/navbar.js":"10","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/tutorial.js":"11","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/selcsort.js":"12","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/bubblesort.js":"13","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/radixsort.js":"14","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/insrtsort.js":"15","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/heapsort.js":"16","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/mergesort.js":"17","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/quicksort.js":"18","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/colors.js":"19","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/zigzag.js":"20","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/dijkstra.js":"21","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/timingfuns.js":"22","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/bfs.js":"23","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/dfsmaze.js":"24","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/greedybfs.js":"25","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/astar.js":"26","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/dfs.js":"27","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/krushkals.js":"28","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/gridsetup.js":"29"},{"size":432,"mtime":1697821460775,"results":"30","hashOfConfig":"31"},{"size":721,"mtime":1697821460775,"results":"32","hashOfConfig":"31"},{"size":3818,"mtime":1697821460775,"results":"33","hashOfConfig":"31"},{"size":3606,"mtime":1697821460775,"results":"34","hashOfConfig":"31"},{"size":3198,"mtime":1697821460775,"results":"35","hashOfConfig":"31"},{"size":1465,"mtime":1697821460775,"results":"36","hashOfConfig":"31"},{"size":2136,"mtime":1697821460775,"results":"37","hashOfConfig":"31"},{"size":5016,"mtime":1697821460775,"results":"38","hashOfConfig":"31"},{"size":5855,"mtime":1697821460775,"results":"39","hashOfConfig":"31"},{"size":10223,"mtime":1697821460775,"results":"40","hashOfConfig":"31"},{"size":8386,"mtime":1697821460775,"results":"41","hashOfConfig":"31"},{"size":2253,"mtime":1697821460775,"results":"42","hashOfConfig":"31"},{"size":2492,"mtime":1697821460775,"results":"43","hashOfConfig":"31"},{"size":3634,"mtime":1697821460775,"results":"44","hashOfConfig":"31"},{"size":3535,"mtime":1697821460775,"results":"45","hashOfConfig":"31"},{"size":3736,"mtime":1697821460775,"results":"46","hashOfConfig":"31"},{"size":4208,"mtime":1697821460775,"results":"47","hashOfConfig":"31"},{"size":3789,"mtime":1697821460775,"results":"48","hashOfConfig":"31"},{"size":319,"mtime":1697821460775,"results":"49","hashOfConfig":"31"},{"size":1708,"mtime":1697821460775,"results":"50","hashOfConfig":"31"},{"size":2960,"mtime":1697821460775,"results":"51","hashOfConfig":"31"},{"size":2274,"mtime":1697821460775,"results":"52","hashOfConfig":"31"},{"size":2624,"mtime":1697821460775,"results":"53","hashOfConfig":"31"},{"size":9319,"mtime":1697821460775,"results":"54","hashOfConfig":"31"},{"size":3283,"mtime":1697821460775,"results":"55","hashOfConfig":"31"},{"size":4214,"mtime":1697821460775,"results":"56","hashOfConfig":"31"},{"size":2663,"mtime":1697821460775,"results":"57","hashOfConfig":"31"},{"size":258,"mtime":1697821460775,"results":"58","hashOfConfig":"31"},{"size":3445,"mtime":1697821460775,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mlggz8",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/index.js",[],"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/App.js",["143"],"import \"./App.css\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Sorthome from \"./components/sorting/sorthome\";\nimport Pathhome from \"./components/pathfinder/pathhome\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Sorthome />\n            </Route>\n            <Route exact path=\"/sorting\">\n              <Sorthome />\n            </Route>\n            <Route exact path=\"/pathfinder\">\n              <Pathhome />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorthome.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./navbar\";\nimport Singlebar from \"./singlebar\";\nimport sort from \"../../storage/sort.png\";\nimport grid from \"../../storage/grid.png\";\nimport \"../../styles/sorting/sorthome.css\";\nimport { bubblesort } from \"./sorts/bubblesort\";\nimport { selectionsort } from \"./sorts/selcsort\";\nimport { heap } from \"./sorts/heapsort\";\nimport { insertionsort } from \"./sorts/insrtsort\";\nimport { radix } from \"./sorts/radixsort\";\nimport { merge } from \"./sorts/mergesort\";\nimport { quick } from \"./sorts/quicksort\";\nimport { Link } from \"react-router-dom\";\n\nconst Sorthome = () => {\n  let arr = [];\n  const [array, setarray] = useState(arr);\n  const [arsize, setarsize] = useState(50);\n  const [speed, setspeed] = useState(50);\n  const [active, setactive] = useState(false);\n\n  const selectspeed = (val) => {\n    if (val <= 15) {\n      setspeed(150);\n    } else if (val <= 30) {\n      setspeed(80);\n    } else if (val <= 60) {\n      setspeed(50);\n    } else if (val <= 80) {\n      setspeed(15);\n    } else if (val <= 110) {\n      setspeed(10);\n    } else if (val <= 150) {\n      setspeed(5);\n    } else {\n      setspeed(3);\n    }\n  };\n  const colorred = () => {\n    document.getElementById(\"navbar1\").style.color = \"red\";\n  };\n  const colornormal = () => {\n    document.getElementById(\"navbar1\").style.color = \"aliceblue\";\n  };\n  const activateit = () => {\n    setTimeout(() => {\n      setactive(false);\n      colornormal();\n    }, 100);\n  };\n  const sortd = () => {\n    let bars = document.getElementsByClassName(\"bars\");\n    let allbars = [...bars];\n    let vals = [];\n    for (let i = 0; i < allbars.length; i++) {\n      vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n    }\n    for (let i = 0; i < vals.length; i++) {\n      let j = i + 1;\n      if (vals[j] - vals[i] < 0) return false;\n    }\n    return true;\n  };\n  const sorttype = (num) => {\n    console.log(num);\n    colorred();\n    if (!sortd()) {\n      switch (num) {\n        case 1:\n          merge(speed);\n          break;\n        case 2:\n          bubblesort(speed);\n          break;\n        case 3:\n          quick(speed);\n          break;\n        case 4:\n          heap(speed);\n          break;\n        case 5:\n          radix(speed);\n          break;\n        case 6:\n          insertionsort(speed);\n          break;\n        case 7:\n          selectionsort(speed);\n          break;\n\n        default:\n          console.log(\"sort not choosen\");\n          break;\n      }\n    }\n    console.log(\"end\");\n    setTimeout(() => activateit(), 100);\n  };\n\n  const randomnum = () => {\n    return Math.floor(Math.random() * (700 - 80 + 1) + 80);\n  };\n\n  const arrayvalue = (val) => {\n    setarsize(val);\n    selectspeed(val);\n    arr = [];\n    for (let i = 0; i < val; i++) {\n      arr.push(randomnum());\n    }\n    setarray(arr);\n  };\n\n  useEffect(() => {\n    arrayvalue(100);\n  }, []);\n\n  const newarray = () => {\n    arrayvalue(arsize);\n  };\n\n  return (\n    <div>\n      {active && <div id=\"blk_div\"></div>}\n      <Navbar\n        barval={arrayvalue}\n        newarr={newarray}\n        sortfunc={sorttype}\n        activfunc={setactive}\n      />\n      <div id=\"main_box\">\n        <div id=\"bars_div\">\n          {array.map((val, index) => (\n            <Singlebar size={val} arrsize={arsize} ind={index} />\n          ))}\n        </div>\n      </div>\n      <div id=\"icons_div\">\n        <div id=\"icon_in_div\">\n          <Link to=\"/sorting\">\n            <div id=\"iconsrt\">\n              <img src={sort} height=\"100%\" width=\"100%\" />\n            </div>\n          </Link>\n          <Link to=\"/pathfinder\">\n            <div id=\"iconpath\">\n              <img src={grid} height=\"100%\" width=\"100%\" />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sorthome;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/pathhome.js",["147","148","149","150","151"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./navbar\";\nimport Details from \"./details\";\nimport sort from \"../../storage/sort.png\";\nimport grid from \"../../storage/grid.png\";\nimport \"../../styles/pathfinder/pathhome.css\";\nimport { Link } from \"react-router-dom\";\nimport { clearboard } from \"./clearfuncs\";\nimport { wallnodefunc, addweight, initialize, bmbinit } from \"./setup\";\nimport Tutorial from \"./tutorial\";\nimport { GrHelp } from \"react-icons/gr\";\n\nconst Pathhome = () => {\n  let arr = [];\n  for (let i = 1; i <= 2059; i++) arr.push(`${i}`);\n\n  useEffect(() => initialize());\n\n  let descs = [\n    \"Dijkstra's Algorithm is weighted and guarantees the shortest path!\",\n    \"A* Search is weighted and guarantees the shortest path!\",\n    \"Greedy Best-first Search is weighted and does not guarantee the shortest path!\",\n    \"A* Search is weighted and guarantees the shortest path!\",\n    \"A* Search is weighted and guarantees the shortest path!\",\n    \"A* Search is weighted and guarantees the shortest path!\",\n    \"Depth-first Search is unweighted and does not guarantee the shortest path!\",\n    \"Breath-first Search is unweighted and guarantees the shortest path!\",\n  ];\n\n  const clearboardfunc = () => {\n    clearboard();\n    initialize();\n  };\n\n  const [descstr, setdescstr] = useState(descs[0]);\n  const [algosnum, setalgosnum] = useState(0);\n  const [nfvst, setnfvst] = useState(0);\n  const [totdist, settotdist] = useState(0);\n  const [tutsbtn, settutsbtn] = useState(false);\n\n  const descsfunc = (vl) => {\n    setdescstr(descs[vl]);\n    setalgosnum(vl);\n  };\n\n  let src = (\n    <div draggable=\"true\" class=\"first\" id=\"source\">\n      <i class=\"fa fa-chevron-right\"></i>\n    </div>\n  );\n\n  let dest = (\n    <div draggable=\"true\" class=\"last\" id=\"dest\">\n      <i class=\"fa fa-bullseye\"></i>\n    </div>\n  );\n\n  return (\n    <div>\n      {tutsbtn && <Tutorial tutsdisp={settutsbtn} />}\n      {/* {active && <div id=\"blk_div\"></div>} */}\n      <Navbar\n        clearboard={clearboardfunc}\n        desc={(vl) => descsfunc(vl)}\n        setv={setnfvst}\n        setp={settotdist}\n      />\n      <Details algonum={algosnum} />\n      <div id=\"algo_info\">{descstr}</div>\n      <div id=\"main_grid_box\">\n        {arr.map((val) => {\n          let innerhtml = <></>;\n          if (val == 860) innerhtml = src;\n          else if (val == 915) innerhtml = dest;\n\n          return (\n            <div\n              className=\"nodes\"\n              id={`node${val}`}\n              name={`${val}`}\n              style={{ backgroundColor: \"white\" }}\n              onClick={(e) => wallnodefunc(e)}\n              onDoubleClick={(e) => {\n                if (!(algosnum === 6 || algosnum === 7)) addweight(e);\n              }}\n            >\n              {innerhtml}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"algoinfo\">\n        <span>\n          <b>No Of Nodes Visited :</b> {nfvst}\n        </span>\n        <span>\n          <b>Total Distance Of Path Found :</b> {totdist}\n        </span>\n      </div>\n      <div onClick={() => settutsbtn(true)} className=\"btntut\">\n        <GrHelp className=\"qicn\" />\n      </div>\n      <div id=\"icons_div\">\n        <div id=\"icon_in_div\">\n          <Link to=\"/sorting\">\n            <div id=\"iconsrt\">\n              <img src={sort} height=\"100%\" width=\"100%\" />\n            </div>\n          </Link>\n          <Link to=\"/pathfinder\">\n            <div id=\"iconpath\">\n              <img src={grid} height=\"100%\" width=\"100%\" />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Pathhome;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/navbar.js",["152","153","154"],"import React, { useState } from \"react\";\nimport \"../../styles/sorting/navbar.css\";\nimport title from \"../../storage/sorttitle.png\";\nimport { BsCaretDownFill } from \"react-icons/bs\";\nimport { useHistory } from \"react-router-dom\";\nconst Navbar = (props) => {\n  const [barvalue, setbarvalue] = useState(100);\n  const [drpmenu, setdrpmenu] = useState(false);\n  const [sortopt, setsortopt] = useState(\"Merge Sort\");\n  const [sortnum, setsortnum] = useState(1);\n  const [active, setactive] = useState(false);\n\n  const optionfunc = (e, val) => {\n    setsortopt(e.target.innerHTML);\n    setsortnum(val);\n    setdrpmenu(false);\n  };\n\n  const history = useHistory();\n  const reloadfunc = () => {\n    history.go(\"http://localhost:3000/sorting\");\n  };\n\n  return (\n    <nav>\n      {drpmenu && (\n        <div\n          id=\"blk_div2\"\n          onClick={() => {\n            if (drpmenu) setdrpmenu(false);\n            else setdrpmenu(true);\n          }}\n        ></div>\n      )}\n      <div id=\"navbar1\">\n        <div id=\"logo_div\" onClick={() => reloadfunc()}>\n          <img src={title} height=\"100%\" width=\"100%\" />\n        </div>\n        <div>\n          <div id=\"newarr\" onClick={props.newarr}>\n            New Array\n          </div>\n        </div>\n        <div id=\"rangebar\">\n          <label id=\"lb1\">Range&nbsp;&&nbsp;Speed</label>\n          <input\n            type=\"range\"\n            min=\"5\"\n            max=\"300\"\n            value={barvalue}\n            onChange={(e) => {\n              setbarvalue(e.target.value);\n              props.barval(e.target.value);\n            }}\n          />\n          <label id=\"lb2\">{barvalue}</label>\n        </div>\n        <div id=\"sorts_sec\">\n          <div\n            id=\"selctd\"\n            onClick={() => {\n              if (drpmenu) setdrpmenu(false);\n              else setdrpmenu(true);\n            }}\n          >\n            <label id=\"selctd_srt\">{sortopt}</label>\n            <BsCaretDownFill id=\"dropicon\" />\n          </div>\n          {drpmenu && (\n            <div id=\"opt_box\">\n              <p className=\"options\" onClick={(e) => optionfunc(e, 1)}>\n                Merge Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 2)}>\n                Bubble Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 3)}>\n                Quick Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 4)}>\n                Heap Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 5)}>\n                Radix Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 6)}>\n                Insertion Sort\n              </p>\n              <p className=\"options\" onClick={(e) => optionfunc(e, 7)}>\n                Selection Sort\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <div\n            id=\"sort_btn\"\n            onClick={() => {\n              props.sortfunc(sortnum);\n              props.activfunc(true);\n            }}\n          >\n            {sortopt}!\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/singlebar.js",[],"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/details.js",["155","156","157"],"import React from \"react\";\nimport \"../../styles/pathfinder/details.css\";\nimport { GrTarget } from \"react-icons/gr\";\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\nimport { GiWeight } from \"react-icons/gi\";\nimport { FaBomb } from \"react-icons/fa\";\nimport { useEffect, useState } from \"react\";\nimport {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited3,\n  pathnodeclr,\n} from \"./colors\";\n\nconst Details = (props) => {\n  const [wgtbool, setwgtbool] = useState(false);\n  useEffect(() => {\n    if (props.algonum === 6 || props.algonum === 7) setwgtbool(true);\n    else setwgtbool(false);\n  }, onclick);\n\n  return (\n    <div id=\"details_box\">\n      <div className=\"detl_divs\">\n        <IoIosArrowDroprightCircle className=\"nodeicn\" />\n        <span> StartNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <GrTarget className=\"nodeicn\" />\n        <span> TargetNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <FaBomb className=\"nodeicn\" />\n        <span> BombNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <GiWeight className=\"nodeicn\" />\n        {!wgtbool && <span> WeightNode</span>}\n        {wgtbool && (\n          <span>\n            <s> WeightNode</s>\n          </span>\n        )}\n      </div>\n      <div className=\"detl_divs\">\n        <i\n          className=\"clr_boxs\"\n          style={{\n            backgroundColor: normalnodeclr,\n            border: \"1px solid lightblue\",\n          }}\n        ></i>\n        <span> UnvisitedNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <i className=\"clr_boxs\" style={{ backgroundColor: visited3 }}></i>\n        <i className=\"clr_boxs\" style={{ backgroundColor: visited1 }}></i>\n        <span> VisitedNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <i className=\"clr_boxs\" style={{ backgroundColor: pathnodeclr }}></i>\n        <span> ShortestPathNode</span>\n      </div>\n      <div className=\"detl_divs\">\n        <i className=\"clr_boxs\" style={{ backgroundColor: wallnodeclr }}></i>\n        <span> WallNode</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/clearfuncs.js",["158","159","160","161","162","163","164","165","166"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"./colors\";\n\nexport const sleep = (milliseconds) => {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n};\n\nconst clearanimation = (allnodes, val) => {\n  console.log(\"hi\");\n  if (val == -1) {\n    for (let i = 0; i <= 2058; i++) {\n      allnodes[i].style.animation = \"\";\n    }\n  } else {\n    val.style.animation = \"\";\n  }\n};\n\nexport const activateit = (allnodes, val) => {\n  setTimeout(() => {\n    clearanimation(allnodes, val);\n  }, 0);\n  // sleep(25);\n};\n\nexport const clearpath = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (\n      color === visited1 ||\n      color === visited2 ||\n      color === visited3 ||\n      color === pathnodeclr\n    ) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  clearanimation(allnodes, -1);\n};\n\nexport const clearwalls_nodes = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n    if (i.children.length == 1 && i.children[0].className === \"weight\") {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  clearanimation(allnodes, -1);\n};\n\nconst points = (node, str) => {\n  let a = new DOMParser();\n  let y = a.parseFromString(str, \"text/html\");\n  console.log(y.body.firstChild);\n  node.style.backgroundColor = normalnodeclr;\n  node.append(y.body.firstChild);\n};\n\nexport const clearboard = () => {\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n    if (i.children.length == 1) {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  for (let i of allnodes) {\n    if (i.id == \"node860\") {\n      console.log(\"860\");\n      let src = `<div draggable=\"true\" id=\"source\">\n          <i class=\"fa fa-chevron-right\"></i>\n        </div>`;\n\n      points(i, src);\n      i.style.animation = \"popup 250ms ease-out\";\n    } else if (i.id == \"node915\") {\n      console.log(\"915\");\n      let dest = `<div draggable=\"true\" id=\"dest\">\n          <i class=\"fa fa-bullseye\"></i>\n        </div>`;\n      points(i, dest);\n      i.style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nconst randomnum = () => {\n  return Math.floor(Math.random() * (2057 - 2 + 1) + 2);\n};\n\nexport const randomwall = () => {\n  clearwalls_nodes();\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n    if (allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nexport const randomweights = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 500; i++) {\n    let val = randomnum();\n    console.log(val);\n    if (allnodes[val].children.length == 0) {\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nexport const randomweightsnwalls = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n    console.log(val);\n    if (i % 2 === 1 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = normalnodeclr;\n      allnodes[val].style.borderColor = normalborderclr;\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n    if (i % 2 === 0 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/setup.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import { activateit } from \"./clearfuncs\";\nimport { shuffle } from \"./mazes/dfsmaze\";\nconst wallnodeclr = \"rgb(84, 55, 90)\";\nconst normalnodeclr = \"white\";\nconst normalborderclr = \"rgba(255, 201, 255, 0.411)\";\n\nexport const wallnodefunc = (e) => {\n  console.log(e.target);\n  let x;\n  if (e.target.className == \"nodes\") x = e.target;\n  else if (e.target.parentNode.className == \"nodes\") x = e.target.parentNode;\n  else if (e.target.parentNode.parentNode.className == \"nodes\")\n    x = e.target.parentNode.parentNode;\n  else if (e.target.parentNode.parentNode.parentNode.className == \"nodes\")\n    x = e.target.parentNode.parentNode.parentNode;\n  console.log(x.children.length);\n  if (x.children.length == 0) {\n    if (x.style.backgroundColor === normalnodeclr) {\n      x.style.backgroundColor = wallnodeclr;\n      x.style.borderColor = wallnodeclr;\n      x.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, x), 0);\n    } else {\n      x.style.backgroundColor = normalnodeclr;\n      x.style.borderColor = normalborderclr;\n    }\n  }\n};\n\nlet b = `<div draggable=\"true\" class=\"middle\" id=\"bomb\">\n<i class=\"fa fa-bomb\"></i>\n</div>`;\n\nexport const addbomb = () => {\n  let rand = [];\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 2058; i++) {\n    if (\n      allnodes[i].children.length === 0 &&\n      allnodes[i].style.backgroundColor === normalnodeclr\n    ) {\n      rand.push(i);\n    }\n  }\n  for (let i = 0; i < 5; i++) rand = shuffle(rand);\n  let ind = rand[0];\n  let x = allnodes[ind];\n  let a = new DOMParser();\n  let y = a.parseFromString(b, \"text/html\");\n  console.log(y.body.firstChild);\n  x.style.backgroundColor = normalnodeclr;\n  x.style.borderColor = normalborderclr;\n  x.append(y.body.firstChild);\n  x.style.animation = \"popup 250ms ease-out\";\n  bmbinit();\n  setTimeout(() => activateit(0, x), 0);\n};\n\nexport const rmbomb = () => {\n  let divs = document.getElementById(\"bomb\");\n  divs.parentNode.removeChild(divs.parentNode.firstElementChild);\n};\n\nlet w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n\nexport const addweight = (e) => {\n  console.log(e.target);\n  let x;\n  if (e.target.className == \"nodes\") x = e.target;\n  else if (e.target.parentNode.className == \"nodes\") x = e.target.parentNode;\n  else if (e.target.parentNode.parentNode.className == \"nodes\")\n    x = e.target.parentNode.parentNode;\n  else if (e.target.parentNode.parentNode.parentNode.className == \"nodes\")\n    x = e.target.parentNode.parentNode.parentNode;\n  console.log(x);\n  if (x.children.length == 0) {\n    let a = new DOMParser();\n    let y = a.parseFromString(w, \"text/html\");\n    console.log(y.body.firstChild);\n    x.style.backgroundColor = normalnodeclr;\n    x.style.borderColor = normalborderclr;\n    x.append(y.body.firstChild);\n    x.style.animation = \"popup 250ms ease-out\";\n    setTimeout(() => activateit(0, x), 0);\n  } else if (x.children.length == 1 && x.children[0].className === \"weight\") {\n    x.children[0].remove();\n  }\n};\n\nexport const removeweights = () => {\n  let divs = document.getElementsByClassName(\"weight\");\n  let alldivs = [...divs];\n  for (let e of alldivs) {\n    e.parentNode.removeChild(e.parentNode.firstElementChild);\n  }\n};\n\nlet src, empties, dest, bmb, x;\n\nexport const initialize = () => {\n  src = document.querySelector(\"#source\");\n  console.log(src);\n  dest = document.querySelector(\"#dest\");\n\n  empties = document.querySelectorAll(\".nodes\");\n  src.addEventListener(\"dragstart\", dragStart);\n  src.addEventListener(\"dragend\", dragEnd);\n  dest.addEventListener(\"dragstart\", dragStart2);\n  dest.addEventListener(\"dragend\", dragEnd2);\n  for (const empty of empties) {\n    empty.addEventListener(\"dragover\", dragOver);\n    empty.addEventListener(\"dragenter\", dragEnter);\n    empty.addEventListener(\"dragleave\", dragLeave);\n    empty.addEventListener(\"drop\", dragDrop);\n  }\n};\n\nexport const bmbinit = () => {\n  bmb = document.querySelector(\"#bomb\");\n  bmb.addEventListener(\"dragstart\", dragStart3);\n  bmb.addEventListener(\"dragend\", dragEnd3);\n};\n\nfunction dragStart() {\n  x = 1;\n  console.log(src);\n}\n\nfunction dragStart2() {\n  x = 2;\n}\n\nfunction dragStart3() {\n  x = 3;\n}\n\nfunction dragEnd() {\n  this.id = \"source\";\n}\n\nfunction dragEnd2() {\n  this.id = \"dest\";\n}\n\nfunction dragEnd3() {\n  this.id = \"bomb\";\n}\n\nfunction dragOver(e) {\n  e.preventDefault();\n}\n\nfunction dragEnter(e) {\n  e.preventDefault();\n  // this.className += \" hovered\";\n}\n\nfunction dragLeave() {\n  this.className = \"nodes\";\n}\n\nfunction dragDrop() {\n  let str = this.children.length;\n  console.log(this.children.length);\n  this.className = \"nodes\";\n  this.style.backgroundColor = normalnodeclr;\n  this.style.borderColor = normalborderclr;\n  if (str == 1 && this.children[0].className === \"weight\") {\n    console.log(\"yes\");\n    this.children[0].remove();\n    if (x == 1) {\n      this.append(src);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    } else if (x == 2) {\n      this.append(dest);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    } else if (x == 3) {\n      this.append(bmb);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    }\n  } else if (str == 0) {\n    console.log(x);\n    if (x == 1) {\n      this.append(src);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    } else if (x == 2) {\n      this.append(dest);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    } else if (x == 3) {\n      this.append(bmb);\n      this.style.animation = \"popup 250ms ease-out\";\n      setTimeout(() => activateit(0, this), 0);\n    }\n  }\n  x = 0;\n  console.log(this.children.length);\n}\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/navbar.js",["186"],"import React, { useState } from \"react\";\nimport \"../../styles/pathfinder/navbar.css\";\nimport title from \"../../storage/pathtitle2.png\";\nimport { BsCaretDownFill } from \"react-icons/bs\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  clearwalls_nodes,\n  clearpath,\n  randomwall,\n  randomweights,\n  randomweightsnwalls,\n} from \"./clearfuncs\";\nimport { zigzag } from \"./mazes/zigzag\";\nimport { setnodes } from \"./mazes/dfsmaze\";\nimport { dijkstras } from \"./algorithms/dijkstra\";\nimport { bfs } from \"./algorithms/bfs\";\nimport { dfs } from \"./algorithms/dfs\";\nimport { gbfs } from \"./algorithms/greedybfs\";\nimport { astar } from \"./algorithms/astar\";\nimport { removeweights, addbomb, rmbomb } from \"./setup\";\n\nfunction Navbar(props) {\n  const [drpmenu, setdrpmenu] = useState(false);\n  const [algomenu, setalgomenu] = useState(false);\n  const [mazemenu, setmazemenu] = useState(false);\n  const [algoval, setalgoval] = useState(\"Dijkstra's\");\n  const [speedval, setspeedval] = useState(\"Fast\");\n  const [speedmenu, setspeedmenu] = useState(false);\n  const [clearmenu, setclearmenu] = useState(false);\n  const [algonum, setalgonum] = useState(0);\n  const [spdvl, setspdvl] = useState(10);\n  const [bmbbtn, setbmbbtn] = useState(false);\n\n  const callalgo = (cs) => {\n    let infoarr;\n    switch (cs) {\n      case 0:\n        infoarr = dijkstras(spdvl, bmbbtn);\n        break;\n      case 1:\n        infoarr = astar(spdvl, bmbbtn);\n        break;\n      case 2:\n        infoarr = gbfs(spdvl, bmbbtn);\n        break;\n      case 6:\n        infoarr = dfs(spdvl, bmbbtn);\n        break;\n      case 7:\n        infoarr = bfs(spdvl, bmbbtn);\n        break;\n      default:\n        infoarr = dijkstras(spdvl, bmbbtn);\n        break;\n    }\n    props.setv(infoarr[0]);\n    props.setp(infoarr[1]);\n  };\n\n  const setalgo = (val) => {\n    setalgomenu(false);\n    setalgoval(val);\n  };\n\n  const setspeed = (val) => {\n    setspeedmenu(false);\n    setspeedval(val);\n  };\n\n  const history = useHistory();\n  const reloadfunc = () => {\n    history.go(\"http://localhost:3000/pathfinder\");\n  };\n\n  return (\n    <nav>\n      {drpmenu && (\n        <div\n          id=\"blk_div2\"\n          onClick={() => {\n            if (drpmenu) setdrpmenu(false);\n            else setdrpmenu(true);\n          }}\n        ></div>\n      )}\n      <div id=\"navbar2\">\n        <div id=\"logo_div2\" onClick={() => reloadfunc()}>\n          <img src={title} height=\"100%\" width=\"100%\" />\n        </div>\n        <div>\n          <div\n            className=\"instrctns dropmns\"\n            onClick={() => {\n              if (algomenu) setalgomenu(false);\n              else setalgomenu(true);\n              setspeedmenu(false);\n              setmazemenu(false);\n              setclearmenu(false);\n            }}\n          >\n            <span>Algorithms</span>\n            <BsCaretDownFill className=\"drpdwnicn\" />\n          </div>\n          {algomenu && (\n            <div id=\"algo_box\">\n              <p\n                onClick={() => {\n                  setalgo(\"Dijkstra's\");\n                  props.desc(0);\n                  setalgonum(0);\n                }}\n              >\n                Dijkstra's Algorithm\n              </p>\n              <p\n                onClick={() => {\n                  setalgo(\"A*\");\n                  props.desc(1);\n                  setalgonum(1);\n                }}\n              >\n                A* search\n              </p>\n              <p\n                onClick={() => {\n                  setalgo(\"GreedyBestFirst\");\n                  props.desc(2);\n                  setalgonum(2);\n                }}\n              >\n                Greedy Best-first Search\n              </p>\n              <p\n                onClick={() => {\n                  setalgo(\"DFS\");\n                  props.desc(6);\n                  setalgonum(6);\n                  removeweights();\n                }}\n              >\n                Depth-first Search\n              </p>\n              <p\n                onClick={() => {\n                  setalgo(\"BFS\");\n                  props.desc(7);\n                  setalgonum(7);\n                  removeweights();\n                }}\n              >\n                Breadth-first Search\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <div\n            className=\"instrctns dropmns\"\n            onClick={() => {\n              if (mazemenu) setmazemenu(false);\n              else setmazemenu(true);\n              setspeedmenu(false);\n              setalgomenu(false);\n              setclearmenu(false);\n            }}\n          >\n            <span>Mazes & Patterns</span>\n            <BsCaretDownFill className=\"drpdwnicn\" />\n          </div>\n          {mazemenu && (\n            <div id=\"algo_box\">\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  setnodes(1, bmbbtn);\n                }}\n              >\n                Randomized Prim's Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  setnodes(3, bmbbtn);\n                }}\n              >\n                Randomized Krushkal's Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  setnodes(2, bmbbtn);\n                }}\n              >\n                Randomized&nbsp;DFS&nbsp;Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  randomwall();\n                }}\n              >\n                Basic Random Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  if (!(algonum === 6 || algonum === 7)) randomweights();\n                }}\n              >\n                Basic Weight Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  if (!(algonum === 6 || algonum === 7)) randomweightsnwalls();\n                }}\n              >\n                Random Walls & Weights Maze\n              </p>\n              <p\n                onClick={() => {\n                  setmazemenu(false);\n                  zigzag();\n                }}\n              >\n                Simple Stair Pattern\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <div\n            className=\"instrctns dropmns\"\n            onClick={() => {\n              if (speedmenu) setspeedmenu(false);\n              else setspeedmenu(true);\n              setmazemenu(false);\n              setalgomenu(false);\n              setclearmenu(false);\n            }}\n          >\n            <span>Speed:{speedval}</span>\n            <BsCaretDownFill className=\"drpdwnicn\" />\n          </div>\n          {speedmenu && (\n            <div id=\"algo_box\" style={{ width: \"200px\" }}>\n              <p\n                onClick={() => {\n                  setspeed(\"Fast\");\n                  setspdvl(10);\n                }}\n              >\n                Fast\n              </p>\n              <p\n                onClick={() => {\n                  setspeed(\"Average\");\n                  setspdvl(50);\n                }}\n              >\n                Average\n              </p>\n              <p\n                onClick={() => {\n                  setspeed(\"Slow\");\n                  setspdvl(125);\n                }}\n              >\n                Slow\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <div\n            className=\"instrctns\"\n            id=\"visulize_btn\"\n            onClick={() => callalgo(algonum)}\n          >\n            Visualize {algoval}!\n          </div>\n        </div>\n        <div>\n          {!bmbbtn && (\n            <div\n              className=\"instrctns\"\n              id=\"visulize_btn\"\n              onClick={() => {\n                addbomb();\n                setbmbbtn(true);\n              }}\n            >\n              AddBomb\n            </div>\n          )}\n          {bmbbtn && (\n            <div\n              className=\"instrctns\"\n              id=\"bmb_btn\"\n              onClick={() => {\n                rmbomb();\n                setbmbbtn(false);\n              }}\n            >\n              RemoveBomb\n            </div>\n          )}\n        </div>\n        <div>\n          <div\n            id=\"hambrgricn\"\n            onClick={() => {\n              if (clearmenu) setclearmenu(false);\n              else setclearmenu(true);\n              setspeedmenu(false);\n              setmazemenu(false);\n              setalgomenu(false);\n            }}\n          >\n            <GiHamburgerMenu id=\"hambrgr\" />\n          </div>\n          <div id=\"clear_btns_box\">\n            <div>\n              <div\n                className=\"instrctns clearbtns\"\n                onClick={() => {\n                  props.clearboard();\n                  setbmbbtn(false);\n                }}\n              >\n                ClearBoard\n              </div>\n            </div>\n            <div>\n              <div className=\"instrctns clearbtns\" onClick={() => clearpath()}>\n                ClearPath\n              </div>\n            </div>\n            <div>\n              <div\n                className=\"instrctns clearbtns\"\n                onClick={() => clearwalls_nodes()}\n              >\n                ClearWalls&Weights\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {clearmenu && (\n        <div id=\"hamoptions\">\n          <p\n            onClick={() => {\n              props.clearboard();\n              setclearmenu(false);\n              setbmbbtn(false);\n            }}\n          >\n            ClearBoard\n          </p>\n          <p\n            onClick={() => {\n              clearpath();\n              setclearmenu(false);\n            }}\n          >\n            ClearPath\n          </p>\n          <p\n            onClick={() => {\n              clearwalls_nodes();\n              setclearmenu(false);\n            }}\n          >\n            ClearWalls&Weights\n          </p>\n        </div>\n      )}\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/tutorial.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport \"../../styles/pathfinder/tutorial.css\";\nimport pathtitle2 from \"../../storage/pathtitle2.png\";\nimport algopic from \"../../storage/algopic.png\";\nimport mazepic from \"../../storage/mazepic.png\";\nimport wallpic from \"../../storage/wallpic.png\";\nimport bmbpic from \"../../storage/bmbpic.png\";\nimport strpic from \"../../storage/strpic.png\";\nimport bombpic from \"../../storage/bombpic.png\";\nimport trgpic from \"../../storage/trgpic.png\";\nimport navpic from \"../../storage/navpic.png\";\nimport spdpic from \"../../storage/spdpic.png\";\nconst Tutorial = (props) => {\n  let slideIndex = 1;\n\n  const plusSlides = (n) => {\n    showSlides((slideIndex += n));\n  };\n\n  const currentSlide = (n) => {\n    showSlides((slideIndex = n));\n  };\n  const showSlides = (n) => {\n    let slide = document.getElementsByClassName(\"mySlides\");\n    let slides = [...slide];\n    let i;\n    if (n > slides.length) {\n      slideIndex = 1;\n    }\n    if (n < 1) {\n      slideIndex = slides.length;\n    }\n    for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n    slides[slideIndex - 1].style.display = \"block\";\n  };\n\n  const tutbtns = (e) => {\n    e = e || window.event;\n\n    if (e.keyCode == \"37\") {\n      plusSlides(-1);\n    }\n    if (e.keyCode == \"39\") {\n      plusSlides(1);\n    }\n  };\n\n  useEffect(() => {\n    showSlides(slideIndex);\n    document.addEventListener(\"keydown\", tutbtns);\n  }, onclick);\n\n  return (\n    <div>\n      <div onClick={() => props.tutsdisp(false)} className=\"tut_main_div\"></div>\n      <div className=\"tut_main\">\n        <div class=\"slideshow_container\">\n          <div className=\"mySlides tut_info1\">\n            <h1>Welcome to PathFinder Visualizer</h1>\n            <p>\n              This short tutorial will walk you through all of the features of\n              this application.\n            </p>\n            <p style={{ fontSize: \"23px\" }}>\n              If you want to dive right in, feel free to press the \"Skip\n              Tutorial\" button below.\n              <br /> Otherwise, press \"Next\"!\n            </p>\n            <img src={pathtitle2} className=\"tut_pathtitle\"></img>\n          </div>\n\n          <div className=\"mySlides tut_info2\">\n            <h1>Picking an algorithm</h1>\n            <p>Choose an algorithm from the \"Algorithms\" drop-down menu.</p>\n            <p style={{ fontSize: \"20px\" }}>\n              Note that some algorithms are&nbsp;\n              <i>\n                <b>unweighted</b>\n              </i>\n              , while others are&nbsp;\n              <i>\n                <b>weighted</b>\n              </i>\n              . Unweighted algorithms do not take turns or weight nodes into\n              account, whereas weighted ones do. Additionally, not all\n              algorithms guarantee the shortest path.\n            </p>\n            <img src={algopic} className=\"tut_algopic\"></img>\n          </div>\n          <div className=\"mySlides tut_info3\">\n            <h1>Picking an Maze / Pattern</h1>\n            <p>\n              Choose an maze algorithm from the \"Mazes & Pattern\" drop-down\n              menu.\n            </p>\n            <img src={mazepic} className=\"tut_mazepic\"></img>\n          </div>\n          <div className=\"mySlides tut_info4\">\n            <h1>Meet The Algorithms</h1>\n            <p>\n              <b>Search Algorithms.</b>\n            </p>\n            <p style={{ fontSize: \"18px\" }}>\n              <b>Dijkstra's Algorithm </b>(weighted): The father of pathfinding\n              algorithms; guarantees the shortest path\n              <br />\n              <b> A* Search</b> (weighted): Arguably the best pathfinding\n              algorithm; uses heuristics to guarantee the shortest path much\n              faster than Dijkstra's Algorithm\n              <br />\n              <b>Greedy Best-first Search</b>\n              (weighted): A faster, more heuristic-heavy version of A*; does not\n              guarantee the shortest path\n              <br />\n              <b>Breath-first Search</b> (unweighted): A great algorithm;\n              guarantees the shortest path\n              <br />\n              <b>Depth-first Search</b>\n              (unweighted): A very bad algorithm for pathfinding; does not\n              guarantee the shortest path\n            </p>\n            <p>\n              <b>Maze Algorithms.</b>\n            </p>\n            <p style={{ fontSize: \"18px\" }}>\n              <b>Randomized Prim's Algorithm: </b>This Algorithm creates maze by\n              connecting the vertices in a minimum spanning tree.\n              <br />\n              <b>Randomized Krushkal's Algorithm:</b> This Algorithm creates\n              maze by connecting the edges that are selected randomly from list.\n              <br />\n              <b>Randomized DFS Algorithm:</b> This Algorithm creates maze by\n              connecting the edges that are selected randomly from stack.\n            </p>\n          </div>\n          <div className=\"mySlides tut_info5\">\n            <h1>Adding walls and weights</h1>\n            <p>\n              Click on the grid to add a wall. DoubleClick on the grid to add a\n              weight. Generate mazes and patterns from the \"Mazes & Patterns\"\n              drop-down menu.\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              Walls are impenetrable, meaning that a path cannot cross through\n              them. Weights, however, are not impassable. They are simply more\n              \"costly\" to move through. In this application, moving through a\n              weight node has a \"cost\" of 15.\n              <br />\n              <b>Note:</b> weight node can't be added if algorithm selected is\n              BFS or DFS\n            </p>\n            <img src={wallpic} className=\"tut_wallpic\"></img>\n          </div>\n          <div className=\"mySlides tut_info6\">\n            <h1>Adding a Bomb</h1>\n            <p>Click the \"Add Bomb\" button.</p>\n            <p style={{ fontSize: \"20px\" }}>\n              Adding a bomb will change the course of the chosen algorithm. In\n              other words, the algorithm will first look for the bomb (in an\n              effort to diffuse it) and will then look for the target node.\n            </p>\n            <p>Click the \"Remove Bomb\" button to remove bomb.</p>\n            <img src={bmbpic} className=\"tut_bmbpic\"></img>\n          </div>\n          <div className=\"mySlides tut_info7\">\n            <h1>Draggable Nodes</h1>\n            <p>\n              Click and drag the start, bomb, and target nodes to move them.\n            </p>\n            <div className=\"tut_drags\">\n              <img src={strpic} className=\"tut_drgpic\"></img>\n              <img src={bombpic} className=\"tut_drgpic\"></img>\n              <img src={trgpic} className=\"tut_drgpic\"></img>\n            </div>\n            <h1>Visualizing,Clearing & Other Funcs.</h1>\n            <p>\n              Use the navbar buttons to visualize algorithms and to do other\n              stuff\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              You can clear the current path, clear walls and weights, clear the\n              entire board, and adjust the visualization speed, all from the\n              navbar. If you want to access this tutorial again, click on \"Help\n              Button\" in the bottom right corner of your screen. If you want to\n              stop animation/visualization , click on \"PathFinder Title\" in the\n              top left corner of your screen.\n            </p>\n            <div className=\"tut_navs\">\n              <img src={spdpic} className=\"tut_nav1\"></img>\n              <img src={navpic} className=\"tut_nav2\"></img>\n            </div>\n          </div>\n          <div className=\"mySlides tut_info8\">\n            <h1>Enjoy &#128512;</h1>\n            <p>\n              I Hope You Have Fun Playing Around with this visualization tool.\n            </p>\n          </div>\n        </div>\n        <div className=\"tut_btns\">\n          <div className=\"tut_btn1\" onClick={() => props.tutsdisp(false)}>\n            Skip Tutorial\n          </div>\n          <div className=\"tut_btn2\" onClick={() => plusSlides(-1)}>\n            Previous\n          </div>\n          <div onClick={() => plusSlides(1)} className=\"tut_btn3\">\n            Next\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tutorial;\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/selcsort.js",["202","203","204","205","206","207","208","209","210"],"import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nconst clrit = (i, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  sleep(speed);\n};\n\nconst clrmin = (i, allbars, speed) => {\n  setTimeout(() => clrit(i, allbars, speed), 0);\n};\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    swap(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction waiting1(i, j, allbars, speed) {\n  setTimeout(function () {\n    compr(i, j, allbars, speed);\n  }, 0);\n}\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    compr2(i, j, allbars, speed);\n  }, 0);\n}\n\nfunction waiting3(i, allbars, speed) {\n  setTimeout(function () {\n    clrmin(i, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nconst setspeed = (speed) => {\n  if (speed == 150) speed = 100;\n  else if (speed == 80) speed = 40;\n  else if (speed == 50) speed = 25;\n  else if (speed == 15) speed = 15;\n  else if (speed == 10) speed = 10;\n  else if (speed == 5) speed = 10;\n  return speed;\n};\n\nexport const selectionsort = (speed) => {\n  let speed2 = setspeed(speed);\n  let bars = document.getElementsByClassName(\"bars\");\n  // console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  // console.log(vals);\n  let n = vals.length;\n  for (let i = 0; i < n - 1; i++) {\n    // Find the minimum element in unsorted array\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      waiting1(min, j, allbars, speed2);\n      if (speed == 5) waiting2(min, j, allbars, speed2 / 2);\n      else waiting2(min, j, allbars, speed2);\n      if (vals[j] < vals[min]) {\n        min = j;\n      }\n      waiting1(min, j, allbars, speed2);\n      if (speed == 5) waiting2(min, j, allbars, speed2);\n      else waiting2(min, j, allbars, speed2 / 2);\n    }\n\n    // Swap the found minimum element with the first element\n    if (min != i) {\n      let b = vals[min];\n      vals[min] = vals[i];\n      vals[i] = b;\n      console.log(min, \" \", i);\n      waiting(min, i, allbars, speed);\n    }\n    waiting3(i, allbars, speed);\n  }\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/bubblesort.js",["211","212","213","214","215","216","217"],"import { sleep, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n\n  sleep(speed + speed * 0.4);\n};\n\nconst change = (i, j, allbars, speed) => {\n  let a = allbars[i].style.height;\n  allbars[i].style.height = allbars[j].style.height;\n  allbars[j].style.height = a;\n  sleep(speed);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed);\n};\n\nexport const swap = (i, j, allbars, speed) => {\n  //   console.log(i, \" \", j);\n  setTimeout(() => bfrcolor(i, j, allbars, speed), 0);\n\n  setTimeout(() => change(i, j, allbars, speed), 0);\n\n  setTimeout(() => aftrcolor(i, j, allbars, speed), 0);\n};\n\nconst bfrcolor2 = (i, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(80, 1, 207)\";\n  sleep(speed);\n};\n\nfunction update1(i, allbars, speed) {\n  setTimeout(function () {\n    bfrcolor2(i, allbars, speed);\n  }, 0);\n\n  //   sleep(10);\n}\n\nfunction waiting(i, allbars, speed) {\n  setTimeout(function () {\n    update1(i, allbars, speed);\n  }, 0);\n  //   sleep(1);\n}\n\nconst setspeed = (speed) => {\n  if (speed == 150) speed = 100;\n  else if (speed == 80) speed = 40;\n  else if (speed == 50) speed = 25;\n  else if (speed == 15) speed = 15;\n  else if (speed == 10) speed = 8;\n  else if (speed == 5) speed = 5;\n  return speed;\n};\n\nexport const bubblesort = (speed) => {\n  speed = setspeed(speed);\n  let bars = document.getElementsByClassName(\"bars\");\n  // console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  // console.log(vals);\n  let n = vals.length;\n  for (let i = 0; i < n - 1; ++i) {\n    let x;\n    for (let j = 0; j < n - i - 1; ++j) {\n      x = j;\n      setTimeout(() => compr(j, j + 1, allbars, speed * 1.4), 0);\n\n      if (vals[j] > vals[j + 1]) {\n        let b = vals[j];\n        vals[j] = vals[j + 1];\n        vals[j + 1] = b;\n\n        setTimeout(() => swap(j, j + 1, allbars, speed), 0);\n      }\n      setTimeout(() => compr2(j, j + 1, allbars, speed), 0);\n    }\n    setTimeout(function () {\n      update1(x + 1, allbars, speed);\n    }, 0);\n  }\n  // console.log(vals);\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/radixsort.js",["218","219","220","221","222","223"],"import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nfunction updat(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  sleep(speed);\n}\nconst bfrcolor = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n  sleep(speed + speed * pr);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\nfunction update2(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, i, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    updat(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, i, allbars, speed);\n  }, 0);\n  //   sleep(10);\n}\n\nfunction waiting5(i, j, allbars, speed) {\n  setTimeout(function () {\n    update2(i, j, allbars, speed);\n  }, 0);\n  //   sleep(1);\n}\nlet speed2 = 20;\nconst setclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  allbars[k].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nconst bacclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[k].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed / 2);\n};\n\nexport const gothrough2 = (i, j, k, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, k, allbars, speed), 0);\n  setTimeout(() => bacclr2(i, j, k, allbars, speed), 0);\n};\n\nfunction waiting(i, j, k, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, k, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction getMax(vals, n) {\n  let mx = vals[0];\n  for (let i = 1; i < parseInt(n); i++) if (vals[i] > mx) mx = vals[i];\n  return mx;\n}\n\nfunction countSort(vals, n, exp, allbars, speed) {\n  let output = []; // output valsay\n  let i,\n    count = [];\n  for (let j = 0; j < 10; j++) {\n    count[j] = 0;\n  }\n\n  for (i = 0; i < parseInt(n); i++) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    count[num2 % 10]++;\n  }\n\n  for (i = 1; i < 10; i++) count[i] += count[i - 1];\n\n  for (i = parseInt(n) - 1; i >= 0; i--) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    output[count[num2 % 10] - 1] = vals[i];\n    count[num2 % 10]--;\n  }\n  for (i = 0; i < n - 2; i++) {\n    waiting(i, i + 1, i + 2, allbars, speed2);\n  }\n  for (i = 0; i < n; i++) {\n    vals[i] = output[i];\n    waiting5(i, output[i], allbars, speed);\n  }\n  console.log(vals);\n}\n\nfunction radixsort(vals, n, allbars, speed) {\n  let m = parseInt(getMax(vals, parseInt(n)));\n\n  for (let exp = 1; Math.floor(parseInt(m / exp)) > 0; exp *= 10) {\n    countSort(vals, parseInt(n), exp, allbars, speed);\n  }\n}\n\nexport const radix = (speed) => {\n  if (speed == 15) speed2 = 50;\n  else if (speed == 50) speed2 = 50;\n  else if (speed > 50) speed2 = 120;\n  else speed2 = 20;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  radixsort(vals, n, allbars, speed);\n  console.log(vals);\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/insrtsort.js",["224","225","226","227","228","229","230"],"import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nconst clrit = (i, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"red\";\n  sleep(speed);\n};\n\nconst clrmin = (i, allbars, speed) => {\n  setTimeout(() => clrit(i, allbars, speed), 0);\n};\n\nfunction waiting3(i, allbars, speed) {\n  setTimeout(function () {\n    clrmin(i, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nconst clrit2 = (i, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed);\n};\n\nconst clrmin2 = (i, allbars, speed) => {\n  setTimeout(() => clrit2(i, allbars, speed), 0);\n};\n\nfunction waiting4(i, allbars, speed) {\n  setTimeout(function () {\n    clrmin2(i, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  let pr = 0.8;\n  if (speed == 10) pr = 3;\n  else if (speed == 5) pr = 3;\n  // else if (speed == 50) pr = 4;\n  sleep(speed + speed * pr);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed);\n};\n\nfunction pushback(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n  allbars[i].style.height = allbars[j].style.height;\n  sleep(speed);\n}\n\nfunction pushback1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    pushback(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction update(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  sleep(speed);\n}\n\nfunction update1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, i, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    update(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, i, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction waiting1(i, j, allbars, speed) {\n  setTimeout(function () {\n    pushback1(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    update1(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\nconst go1 = (allbars) => {\n  setTimeout(() => gothrough(allbars), 20);\n};\n\nconst go2 = (allbars) => {\n  setTimeout(() => clearbar(allbars), 20);\n};\nfunction printarray(arr) {\n  console.log(arr);\n}\nexport const insertionsort = (speed) => {\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n\n  let i, key, j;\n  for (i = 1; i < n; i++) {\n    key = vals[i];\n    j = i - 1;\n\n    /* Move elements of vals[0..i-1], that are\n      greater than key, to one position ahead\n      of their current position */\n    while (j >= 0 && vals[j] > key) {\n      vals[j + 1] = vals[j];\n      j = j - 1;\n      console.log(j + 2, \" \", j + 1);\n      waiting1(j + 2, j + 1, allbars, speed);\n      printarray(vals);\n    }\n    vals[j + 1] = key;\n    console.log(j + 1, \" key \", key);\n    waiting2(j + 1, key, allbars, speed);\n    printarray(vals);\n  }\n  setTimeout(() => go1(allbars), 10);\n  setTimeout(() => go2(allbars), 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/heapsort.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nfunction updat(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  sleep(speed);\n}\nconst bfrcolor = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  sleep(speed);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\nconst bfrcolor2 = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"blue\";\n  allbars[j].style.backgroundColor = \"blue\";\n  sleep(speed);\n};\n\nfunction update2(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n  let pr = speed;\n  if (speed == 5) pr = 15;\n  else if (speed == 8) pr = speed + speed * 1.5;\n  else if (speed == 15) pr = speed + speed * 1;\n  else if (speed == 25) pr = 30;\n  else if (speed == 40) pr = speed + speed * 1;\n\n  setTimeout(function () {\n    bfrcolor(i, i, allbars, pr);\n  }, 0);\n\n  setTimeout(function () {\n    updat(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, i, allbars, speed);\n  }, 0);\n  //   sleep(10);\n}\n\nfunction update1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor2(i, i, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    updat(i, j, allbars, speed);\n  }, 0);\n\n  //   sleep(10);\n}\n\nfunction waiting5(i, j, allbars, speed) {\n  setTimeout(function () {\n    update2(i, j, allbars, speed);\n  }, 0);\n  //   sleep(1);\n}\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    update1(i, j, allbars, speed);\n  }, 0);\n  //   sleep(1);\n}\n\nfunction maxheap(vals, i, n, allbars, speed) {\n  let largest;\n  let l = 2 * i + 1;\n  let r = 2 * i + 2;\n  if (l <= n - 1 && vals[l] > vals[i]) {\n    largest = l;\n  } else {\n    largest = i;\n  }\n  if (r <= n - 1 && vals[r] > vals[largest]) {\n    largest = r;\n  }\n  if (largest != i) {\n    let temp = vals[i];\n    vals[i] = vals[largest];\n    vals[largest] = temp;\n    maxheap(vals, largest, n);\n  }\n}\n\nfunction buildheap(vals, n, allbars, speed) {\n  for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n    maxheap(vals, i, n, allbars, speed);\n  }\n}\n\nfunction delmax(vals, n, allbars, speed) {\n  if (n == 0) {\n    console.log(\"error\");\n  }\n  let max = vals[0];\n  vals[0] = vals[n - 1];\n  vals.pop();\n  n--;\n  maxheap(vals, 0, n, allbars, speed);\n  return max;\n}\n\nconst setspeed = (speed) => {\n  if (speed == 150) speed = 100;\n  else if (speed == 80) speed = 40;\n  else if (speed == 50) speed = 25;\n  else if (speed == 15) speed = 15;\n  else if (speed == 10) speed = 8;\n  else if (speed == 5) speed = 5;\n  return speed;\n};\n\nexport const heap = (speed) => {\n  speed = setspeed(speed);\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  let q = n;\n  let b = [];\n\n  buildheap(vals, n, allbars, speed);\n  for (let j = 0; j < vals.length; j++) waiting5(j, vals[j], allbars, speed);\n  console.log(vals);\n\n  for (let i = q - 1; i >= 1; i--, n--) {\n    b[i] = delmax(vals, n, allbars, speed);\n    waiting(i, b[i], allbars, speed);\n    for (let j = 0; j < vals.length; j++) waiting5(j, vals[j], allbars, speed);\n    console.log(vals);\n  }\n  b[0] = vals[0];\n  waiting5(0, b[0], allbars, speed);\n  console.log(b);\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/mergesort.js",["247","248","249"],"import { sleep, gothrough, clearbar } from \"./timingfuns\";\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  sleep(speed + speed * 0.5);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\n\nfunction update(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n}\n\nfunction update1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    update(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    update1(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\nconst setclr2 = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nexport const gothrough2 = (i, j, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, allbars, speed), 0);\n};\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nlet speed2 = 25;\n\nfunction merging(vals, l, m, r, allbars, speed) {\n  console.log(\"hi\");\n  console.log(vals);\n  let n1 = parseInt(m) - parseInt(l) + 1;\n  let n2 = parseInt(r) - parseInt(m);\n  // if (n1 == 1 && n2 == 1) {\n  //   return;\n  // }\n  console.log(n1, \" \", n2);\n  // Create temp arrays\n  let L = [],\n    R = [];\n\n  // Copy data to temp arrays L[] and R[]\n  for (let i = 0; i < n1; i++) {\n    console.log(\"hi1\");\n\n    L[i] = vals[parseInt(l) + i];\n  }\n  for (let j = 0; j < n2; j++) {\n    console.log(\"hi2\");\n\n    R[j] = vals[parseInt(m) + 1 + j];\n  }\n\n  for (let j = 0, i = 0; j < n2 || i < n1; j++, i++) {\n    if (j >= n2) j--;\n    let x = parseInt(l) + i;\n    let y = parseInt(m) + 1 + j;\n    waiting(x, y, allbars, speed2);\n  }\n  console.log(n1, \"  \", L);\n  console.log(n2, \"  \", R);\n  // Merge the temp arrays back into arr[l..r]\n\n  // Initial index of first subarray\n  let i = 0;\n\n  // Initial index of second subarray\n  let j = 0;\n\n  // Initial index of merged subarray\n  let k = parseInt(l);\n\n  while (i < n1 && j < n2) {\n    console.log(\"hi3\");\n\n    if (L[i] <= R[j]) {\n      vals[k] = L[i];\n      i++;\n      waiting2(k, L[i - 1], allbars, speed);\n    } else {\n      vals[k] = R[j];\n      j++;\n      waiting2(k, R[j - 1], allbars, speed);\n    }\n    k++;\n  }\n\n  // Copy the remaining elements of\n  // L[], if there are any\n  while (i < n1) {\n    console.log(\"hi4\");\n\n    vals[k] = L[i];\n    i++;\n    k++;\n    waiting2(k - 1, L[i - 1], allbars, speed);\n  }\n\n  // Copy the remaining elements of\n  // R[], if there are any\n  while (j < n2) {\n    console.log(\"hi5\");\n\n    vals[k] = R[j];\n    j++;\n    k++;\n    waiting2(k - 1, R[j - 1], allbars, speed);\n  }\n  console.log(vals);\n}\n\n// l is for left index and r is\n// right index of the sub-array\n// of arr to be sorted */\nfunction mergesort(vals, l, r, allbars, speed) {\n  if (parseInt(l) >= parseInt(r)) {\n    return;\n  }\n  let m = parseInt(l) + (parseInt(r) - parseInt(l)) / 2;\n  mergesort(vals, parseInt(l), m, allbars, speed);\n  mergesort(vals, m + 1, parseInt(r), allbars, speed);\n  merging(vals, parseInt(l), m, parseInt(r), allbars, speed);\n}\nconst go1 = (allbars) => {\n  setTimeout(() => gothrough(allbars), 20);\n};\n\nconst go2 = (allbars) => {\n  setTimeout(() => clearbar(allbars), 20);\n};\n\nexport const merge = (speed) => {\n  if (speed == 15) speed2 = 50;\n  else if (speed == 50) speed2 = 80;\n  else if (speed > 50) speed2 = 120;\n  else speed2 = 25;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  mergesort(vals, 0, n - 1, allbars, speed);\n  console.log(vals);\n  setTimeout(() => go1(allbars), 0);\n  setTimeout(() => go2(allbars), 0);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/quicksort.js",["250","251","252","253","254","255"],"import { sleep, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nconst clrit = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"blue\";\n  allbars[j].style.backgroundColor = \"blue\";\n  sleep(speed);\n};\n\nconst clrmin = (i, j, allbars, speed) => {\n  setTimeout(() => clrit(i, j, allbars, speed), 0);\n};\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    clrmin(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nconst bfrcolor2 = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"blue\";\n  allbars[j].style.backgroundColor = \"blue\";\n  sleep(speed * 3);\n};\n\nconst change2 = (i, j, allbars, speed) => {\n  let a = allbars[i].style.height;\n  allbars[i].style.height = allbars[j].style.height;\n  allbars[j].style.height = a;\n  sleep(speed);\n};\n\n// const aftrcolor = (i, j, allbars, speed) => {\n//   allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n//   allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n//   sleep(speed);\n// };\n\nexport const swap2 = (i, j, allbars, speed) => {\n  //   console.log(i, \" \", j);\n\n  setTimeout(() => bfrcolor2(i, j, allbars, speed), 0);\n\n  setTimeout(() => change2(i, j, allbars, speed), 0);\n\n  // setTimeout(() => aftrcolor(i, j, allbars, speed), 0);\n};\n\nfunction waiting3(i, j, allbars, speed) {\n  setTimeout(function () {\n    swap2(i, j, allbars, speed);\n  }, 0);\n  //   sleep(10);\n}\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  let pr = 0.4;\n  if (speed == 10) pr = 2;\n  else if (speed == 15) pr = 3;\n  else if (speed == 50) pr = 4;\n  sleep(speed + speed * pr);\n};\n\nconst change = (i, j, allbars, speed) => {\n  let a = allbars[i].style.height;\n  allbars[i].style.height = allbars[j].style.height;\n  allbars[j].style.height = a;\n  sleep(speed);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed);\n};\n\nexport const swap = (i, j, allbars, speed) => {\n  //   console.log(i, \" \", j);\n  setTimeout(() => bfrcolor(i, j, allbars, speed), 0);\n\n  setTimeout(() => change(i, j, allbars, speed), 0);\n\n  setTimeout(() => aftrcolor(i, j, allbars, speed), 0);\n};\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    swap(i, j, allbars, speed);\n  }, 0);\n  //   sleep(10);\n}\n\nfunction partition(low, high, vals, allbars, speed) {\n  let pivot = vals[high]; // pivot\n  let i = low - 1; // Index of smaller element and indicates the right position of pivot found so far\n  // waiting(low, high, allbars, speed);\n  for (let j = low; j <= high - 1; j++) {\n    if (vals[j] < pivot) {\n      i++;\n      let b = vals[i];\n      vals[i] = vals[j];\n      vals[j] = b;\n      waiting2(i, j, allbars, speed);\n      console.log(i, \" \", j);\n    }\n  }\n  let d = vals[i + 1];\n  vals[i + 1] = vals[high];\n  vals[high] = d;\n  waiting3(i + 1, high, allbars, speed);\n  return i + 1;\n}\n\nfunction quickSort(low, high, vals, allbars, speed) {\n  if (low < high) {\n    let pi = partition(low, high, vals, allbars, speed);\n    quickSort(low, pi - 1, vals, allbars, speed);\n    quickSort(pi + 1, high, vals, allbars, speed);\n  }\n  console.log(vals);\n}\n\nexport const quick = (speed) => {\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  quickSort(0, n - 1, vals, allbars, speed + 20);\n  console.log(vals);\n  setTimeout(function () {\n    gothrough(allbars);\n  }, 10);\n  setTimeout(function () {\n    clearbar(allbars);\n  }, 10);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/colors.js",[],"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/zigzag.js",["256","257","258","259","260","261","262","263","264","265"],"import {\n  clearwalls_nodes,\n  clearpath,\n  randomwall,\n  randomweights,\n  activateit,\n  sleep,\n} from \"../clearfuncs\";\n\nimport {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  pathnodeclr,\n} from \"../colors\";\n\nconst randomnum = (start, end) => {\n  return Math.floor(Math.random() * (end - start + 1) + start);\n};\n\nlet arr = [],\n  num = 0;\nfor (let i = 0; i < 29; i++) {\n  for (let j = 0; j < 71; j++) {\n    arr[i] = [];\n  }\n}\nfor (let i = 0; i < 29; i++) {\n  for (let j = 0; j < 71; j++) {\n    num++;\n    arr[i][j] = num;\n  }\n}\nconst animatenode = (node) => {\n  node.style.backgroundColor = wallnodeclr;\n  node.style.borderColor = wallnodeclr;\n  node.style.animation = \"popup 100ms ease-out\";\n  sleep(30);\n};\n\nconst animewait = (node) => {\n  setTimeout(() => animatenode(node), 0);\n};\n\nconst addwall = (allnodes, val) => {\n  if (allnodes[val].children.length == 0) {\n    setTimeout(() => animewait(allnodes[val]), 0);\n  }\n};\n\nexport const zigzag = () => {\n  clearwalls_nodes();\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  let top = 1;\n  let num = randomnum(5, 27);\n  console.log(num);\n  let i = num,\n    j = 1;\n  console.log(i, \" \", j, arr[i][j]);\n  while (j <= 69 && (i >= 1 || i <= 27)) {\n    if (top == 1) {\n      if (i <= 1) top = 0;\n      else {\n        console.log(i, \" \", j, arr[i][j]);\n        addwall(allnodes, arr[i][j] - 1);\n        i--;\n        j++;\n      }\n    } else if (top == 0) {\n      if (i >= 27) top = 1;\n      else {\n        console.log(i, \" \", j, arr[i][j]);\n        addwall(allnodes, arr[i][j] - 1);\n        i++;\n        j++;\n      }\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/dijkstra.js",["266","267","268","269","270","271","272","273","274","275"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst sortFunction = (a, b) => {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst startDijkstra = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let st = [];\n  let novst = 0;\n  let totdst = 0;\n  st.push([0, u]);\n  dist[u] = 0;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    st.sort(sortFunction);\n    let now = st[0];\n    st.shift();\n\n    let v = now[1];\n    let w = now[0];\n\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      if (w + to[1] < dist[to[0]]) {\n        for (var i = 0; i < st.length; i++) {\n          if (st[i][0] === dist[to[0]] && st[i][1] === to[0]) {\n            st.splice(i, 1);\n          }\n        }\n        dist[to[0]] = w + to[1];\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n\n  return [novst, totdst, path];\n};\n\nexport const dijkstras = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startDijkstra(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src)\n      b = startDijkstra(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startDijkstra(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/timingfuns.js",[],"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/bfs.js",["276","277","278","279","280","281","282","283","284"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst startBFS = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let st = [];\n  let novst = 0;\n  let totdst = 0;\n  st.push([0, u]);\n  dist[u] = 0;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    let now = st[0];\n    st.shift();\n\n    let v = now[1];\n    let w = now[0];\n    visit[v] = 1;\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      if (visit[to[0]] === 0) {\n        visit[to[0]] = 1;\n        dist[to[0]] = w + to[1];\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n  return [novst, totdst, path];\n};\n\nexport const bfs = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startBFS(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src) b = startBFS(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startBFS(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/dfsmaze.js",["285","286","287","288","289","290","291","292","293","294","295","296","297"],"import { activateit, sleep, clearwalls_nodes, clearpath } from \"../clearfuncs\";\nimport { adjlist } from \"../algorithms/gridsetup\";\n\nimport {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  pathnodeclr,\n} from \"../colors\";\n\nimport { getcoord } from \"./krushkals\";\n\nlet stack = [];\nlet krush = [];\nlet visited = [];\nlet stk2 = [];\nlet stk3 = [];\nlet stk4 = [];\nlet wallsarr = [];\nlet arr = [];\nlet directions1 = [\n  [0, 2],\n  [0, -2],\n  [-2, 0],\n  [2, 0],\n];\nlet directions2 = [\n  [0, 1],\n  [0, -1],\n  [-1, 0],\n  [1, 0],\n];\n\nconst dfssetup = () => {\n  stack = [];\n  visited = [];\n  stk2 = [];\n  stk3 = [];\n  stk4 = [];\n  wallsarr = [];\n  for (let i = 0; i < 29; i++) {\n    let temp = [];\n    for (let j = 0; j < 71; j++) temp.push(false);\n    visited.push(temp);\n  }\n  arr = [];\n  let val = 0;\n  for (let i = 0; i < 29; i++) {\n    let temp = [];\n    for (let j = 0; j < 71; j++) {\n      temp.push(val);\n      val++;\n    }\n    arr.push(temp);\n  }\n\n  directions1 = [\n    [0, 2],\n    [0, -2],\n    [-2, 0],\n    [2, 0],\n  ];\n  directions2 = [\n    [0, 1],\n    [0, -1],\n    [-1, 0],\n    [1, 0],\n  ];\n  for (let i = 0; i < 2059; i++) {\n    wallsarr[i] = true;\n  }\n};\n// dfssetup();\n\nfunction getRndnDirec() {\n  let array = [\n    [0, 2],\n    [0, -2],\n    [-2, 0],\n    [2, 0],\n  ];\n  var currentIndex = array.length,\n    randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n\nexport const shuffle = (array) => {\n  var currentIndex = array.length,\n    randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n};\n\nfunction DFS(i, j) {\n  stack.push([i, j]);\n  var temp = getRndnDirec();\n  visited[i][j] = true;\n  temp.forEach(([x, y]) => {\n    let p = i + x,\n      q = j + y;\n    if (0 <= p && p < 29 && 0 <= q && q < 71) {\n      if (!visited[p][q]) {\n        stk2.push([\n          [i, j],\n          [p, q],\n        ]);\n        DFS(p, q);\n      }\n    }\n  });\n}\n\nconst prims = (i, j) => {\n  stack.push([\n    [i, j],\n    [i, j],\n  ]);\n  while (stack.length !== 0) {\n    stack = shuffle(stack);\n    let node = stack[0];\n    stk2.push(node);\n    visited[node[1][0]][node[1][1]] = true;\n    stack.shift();\n    directions1.forEach(([x, y]) => {\n      let p = node[1][0] + x,\n        q = node[1][1] + y;\n      if (0 <= p && p < 29 && 0 <= q && q < 71) {\n        if (!visited[p][q]) {\n          stack.push([\n            [node[1][0], node[1][1]],\n            [p, q],\n          ]);\n          visited[p][q] = true;\n        }\n      }\n    });\n  }\n};\n\n//mhg\n\nlet root = new Array(2060);\nlet visitd = new Array(2060);\n\nconst addEdge = (u, v, dist) => {\n  adjlist.get(u).push([v, dist]);\n};\n\nconst addVertex = (v) => {\n  adjlist.set(v, []);\n};\n\nexport const graphsetup = () => {\n  let val = 0;\n  let arr = new Array(29);\n  for (let i = 0; i < 29; i++) {\n    arr[i] = new Array(71);\n  }\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      arr[i][j] = val;\n    }\n  }\n  for (let i = 73; i <= 2059; i += 2) {\n    addVertex(i);\n  }\n  for (let i = 1; i < 29; i += 2) {\n    for (let j = 1; j < 71; j += 2) {\n      let vrtx = arr[i][j];\n      if (i - 2 >= 0) {\n        addEdge(vrtx, arr[i - 2][j], 1);\n      }\n      if (j + 2 < 71) {\n        addEdge(vrtx, arr[i][j + 2], 1);\n      }\n      if (i + 2 < 29) {\n        addEdge(vrtx, arr[i + 2][j], 1);\n      }\n      if (j - 2 >= 0) {\n        addEdge(vrtx, arr[i][j - 2], 1);\n      }\n    }\n  }\n  for (let i = 73; i <= 2059; i += 2) {\n    root[i] = i;\n  }\n\n  for (let i = 73; i <= 2059; i += 2) {\n    let m = adjlist.get(i);\n    for (let nd of m) {\n      if (!visitd[nd[0]]) krush.push([i, nd[0]]);\n    }\n    visitd[m] = 1;\n  }\n};\n\nexport const parent = (a) => {\n  while (root[a] != a) {\n    root[a] = root[root[a]];\n    a = root[a];\n  }\n  return a;\n};\n\nexport const union_find = (a, b) => {\n  let d = parent(a);\n  let e = parent(b);\n  root[d] = root[e];\n};\n\n//mh\n\nconst kruskal = () => {\n  graphsetup();\n  let a, b;\n  for (let i = 0; i < 5; i++) krush = shuffle(krush);\n  for (let node of krush) {\n    a = node[0];\n    b = node[1];\n    if (parent(a) != parent(b)) {\n      //only select edge if it does not create a cycle (ie the two nodes forming it have different root nodes)\n      stk2.push([getcoord(a), getcoord(b)]);\n      union_find(a, b);\n    }\n  }\n};\n\nfunction cmpr(x, y) {\n  for (let i = 0; i < directions1.length; i++) {\n    if (directions1[i][0] == x && directions1[i][1] == y) {\n      return directions2[i];\n    }\n  }\n  return [0, 0];\n}\n\nfunction diff(a, b, p, q) {\n  let x = p - a;\n  let y = q - b;\n  let arr = cmpr(x, y);\n  stk3.push([a + arr[0], b + arr[1]]);\n  stk4.push([\n    [a, b],\n    [a + arr[0], b + arr[1]],\n    [p, q],\n  ]);\n}\n\nconst paths = () => {\n  for (let i = 0; i < stk2.length; i++) {\n    let a = stk2[i][0][0];\n    let b = stk2[i][0][1];\n    let p = stk2[i][1][0];\n    let q = stk2[i][1][1];\n    diff(a, b, p, q);\n  }\n  // console.log(stk3);\n};\n\nconst pointsurroundingwalls = (num) => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  let val = 0;\n  let i, j;\n  for (let x = 0; x < 29; x++) {\n    for (let y = 0; y < 71; y++) {\n      val++;\n      if (val == num) {\n        i = x;\n        j = y;\n      }\n    }\n  }\n  console.log(i, j);\n  if (i >= 0 && i <= 28 && j >= 0 && j <= 70) {\n    if (j + 1 <= 70 && wallsarr[arr[i][j + 1]]) {\n      wallsarr[arr[i][j + 1]] = false;\n      setTimeout(() => {\n        callvisit(arr[i][j + 1], allnodes, 7, normalnodeclr);\n      }, 0);\n    } else if (j - 1 >= 0 && wallsarr[arr[i][j - 1]]) {\n      wallsarr[arr[i][j - 1]] = false;\n      setTimeout(() => {\n        callvisit(arr[i][j - 1], allnodes, 7, normalnodeclr);\n      }, 0);\n    } else if (i + 1 <= 28 && wallsarr[arr[i + 1][j]]) {\n      wallsarr[arr[i + 1][j]] = false;\n      setTimeout(() => {\n        callvisit(arr[i + 1][j], allnodes, 7, normalnodeclr);\n      }, 0);\n    } else if (i - 1 >= 0 && wallsarr[arr[i - 1][j]]) {\n      wallsarr[arr[i - 1][j]] = false;\n      setTimeout(() => {\n        callvisit(arr[i - 1][j], allnodes, 7, normalnodeclr);\n      }, 0);\n    }\n  }\n};\n\nconst visitclr = (i, alldivs, speed, clr) => {\n  alldivs[i].style.backgroundColor = normalnodeclr;\n  alldivs[i].style.borderColor = normalborderclr;\n  alldivs[i].style.animation = \"popup4 300ms ease-in\";\n  sleep(speed);\n  // sleep(speed + speed * 0.4);\n};\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nexport const setnodes = (algonum, bmb) => {\n  clearwalls_nodes();\n  clearpath();\n  dfssetup();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  let src, dest, bomb;\n  for (let i = 0; i < 2059; i++) {\n    if (\n      allnodes[i].children.length == 1 &&\n      allnodes[i].children[0].id === \"source\"\n    ) {\n      let str = allnodes[i].children[0].parentNode.id;\n      str = str.replace(\"node\", \"\");\n      src = parseInt(str);\n      console.log(src);\n    } else if (\n      allnodes[i].children.length == 1 &&\n      allnodes[i].children[0].id === \"dest\"\n    ) {\n      let str = allnodes[i].children[0].parentNode.id;\n      str = str.replace(\"node\", \"\");\n      dest = parseInt(str);\n      console.log(dest);\n    } else if (\n      bmb &&\n      allnodes[i].children.length == 1 &&\n      allnodes[i].children[0].id === \"bomb\"\n    ) {\n      let str = allnodes[i].children[0].parentNode.id;\n      str = str.replace(\"node\", \"\");\n      bomb = parseInt(str);\n      console.log(bomb);\n    }\n  }\n  if (algonum === 1) prims(1, 1);\n  if (algonum === 2) DFS(1, 1);\n  if (algonum === 3) kruskal();\n  paths();\n  for (let i = 0; i < 2059; i++) {\n    allnodes[i].style.backgroundColor = wallnodeclr;\n    allnodes[i].style.borderColor = wallnodeclr;\n  }\n  allnodes[src - 1].style.backgroundColor = normalnodeclr;\n  allnodes[src - 1].style.borderColor = normalborderclr;\n  allnodes[dest - 1].style.backgroundColor = normalnodeclr;\n  allnodes[dest - 1].style.borderColor = normalborderclr;\n  if (bmb) {\n    allnodes[bomb - 1].style.backgroundColor = normalnodeclr;\n    allnodes[bomb - 1].style.borderColor = normalborderclr;\n  }\n  for (let i = 0; i < stk4.length; i++) {\n    for (let j = 0; j < stk4[i].length; j++) {\n      let num = arr[stk4[i][j][0]][stk4[i][j][1]];\n      wallsarr[num] = false;\n      setTimeout(() => {\n        callvisit(num, allnodes, 5, normalnodeclr);\n      }, 0);\n    }\n  }\n  pointsurroundingwalls(src);\n  pointsurroundingwalls(dest);\n  if (bmb) pointsurroundingwalls(bomb);\n\n  console.log(stk4);\n  // for (let i = 0; i < 2059; i++) {\n  //   if (wallsarr[i] && allnodes[i].children.length == 0) {\n  //     allnodes[i].style.backgroundColor = wallnodeclr;\n  //     allnodes[i].style.borderColor = wallnodeclr;\n  //     allnodes[i].style.animation = \"popup 150ms ease-out\";\n  //   }\n  // }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/greedybfs.js",["298","299","300","301","302","303","304","305","306","307","308"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst getcoord = (x) => {\n  let val = 0;\n  let arr = new Array(2);\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      if (val == x) {\n        arr[0] = i;\n        arr[1] = j;\n        return arr;\n      }\n    }\n  }\n};\n\nconst herucalc = (a, b) => {\n  let first = getcoord(a);\n  let last = getcoord(b);\n  let hval = Math.abs(last[1] - first[1]) + Math.abs(last[0] - first[0]);\n  return hval;\n};\n\nconst sortFunction = (a, b) => {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nconst startGBFS = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let novst = 0;\n  let totdst = 0;\n  let st = [];\n  let m = herucalc(u, dest);\n  st.push([m, u]);\n  dist[u] = m;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    st.sort(sortFunction);\n    let now = st[0];\n    st.shift();\n\n    let v = now[1];\n    let w = now[0];\n    visit[v] = 1;\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      if (visit[to[0]] === 0) {\n        visit[to[0]] = 1;\n        dist[to[0]] = herucalc(to[0], dest);\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n  return [novst, totdst, path];\n};\n\nexport const gbfs = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startGBFS(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src)\n      b = startGBFS(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startGBFS(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/astar.js",["309","310","311","312","313","314","315","316","317","318","319"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst getcoord = (x) => {\n  let val = 0;\n  let arr = new Array(2);\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      if (val == x) {\n        arr[0] = i;\n        arr[1] = j;\n        return arr;\n      }\n    }\n  }\n};\n\nconst herucalc = (a, b) => {\n  let first = getcoord(a);\n  let last = getcoord(b);\n  let hval = Math.abs(last[1] - first[1]) + Math.abs(last[0] - first[0]);\n  return hval;\n};\n\nconst sortFunction = (a, b) => {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst propgateimprov = (v, w, dist, prev, st, visit, dest) => {\n  let edges = adjlist.get(v);\n  for (let to of edges) {\n    if (w + to[1] < dist[to[0]]) {\n      for (var i = 0; i < st.length; i++) {\n        if (st[i][1] === dist[to[0]] && st[i][2] === to[0]) {\n          st.splice(i, 1);\n        }\n      }\n      dist[to[0]] = w + to[1];\n      prev[to[0]] = v;\n      st.push([dist[to[0]] + herucalc(to[0], dest), dist[to[0]], to[0]]);\n      if (visit[to[0]]) {\n        propgateimprov(to[0], w, dist, prev, st, visit, dest);\n      }\n    }\n  }\n};\n\nconst startAstar = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let m = herucalc(u, dest);\n  let st = [];\n  let novst = 0;\n  let totdst = 0;\n  st.push([m, 0, u]);\n  dist[u] = 0;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    st.sort(sortFunction);\n    let now = st[0];\n    st.shift();\n\n    let v = now[2];\n    let w = now[1];\n    let z = now[0];\n    console.log(z, w, v, getcoord(v), getcoord(dest));\n    visit[v] = 1;\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      let tmp = herucalc(v, dest);\n      if (w + to[1] < dist[to[0]]) {\n        for (var i = 0; i < st.length; i++) {\n          if (st[i][1] === dist[to[0]] && st[i][2] === to[0]) {\n            st.splice(i, 1);\n          }\n        }\n        dist[to[0]] = w + to[1];\n        prev[to[0]] = v;\n        st.push([dist[to[0]] + herucalc(to[0], dest), dist[to[0]], to[0]]);\n        if (visit[to[0]]) {\n          propgateimprov(to[0], w, dist, prev, st, visit, dest);\n        }\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n  return [novst, totdst, path];\n};\n\nexport const astar = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startAstar(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src)\n      b = startAstar(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startAstar(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/dfs.js",["320","321","322","323","324","325","326","327","328","329"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit, clearpath } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst startDFS = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(0);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let st = [];\n  let novst = 0;\n  let totdst = 0;\n  st.push([0, u]);\n  dist[u] = 0;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    let now = st[st.length - 1];\n    st.pop();\n    let v = now[1];\n    let w = now[0];\n    visit[v] = 1;\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges.slice().reverse()) {\n      if (visit[to[0]] === 0) {\n        dist[to[0]] = w + to[1];\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n  return [novst, totdst, path];\n};\n\nexport const dfs = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startDFS(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src) b = startDFS(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startDFS(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/mazes/krushkals.js",["330"],"export const getcoord = (x) => {\n  let val = 0;\n  let arr = new Array(2);\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      if (val == x) {\n        arr[0] = i;\n        arr[1] = j;\n        return arr;\n      }\n    }\n  }\n};\n","/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/gridsetup.js",["331","332"],"import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\nimport { activateit, clearpath, sleep } from \"../clearfuncs\";\n\nexport const visitclr = (i, alldivs, speed, clr) => {\n  alldivs[i].style.backgroundColor = clr;\n  alldivs[i].style.borderColor = clr;\n  if (clr === visited1 || clr === visited2)\n    alldivs[i].style.animation = \"popup3 1000ms ease-out\";\n  if (clr === visited3) alldivs[i].style.animation = \"popup7 1000ms ease-out\";\n  // alldivs[i].style.transition = \"linear\";\n  sleep(speed);\n  // sleep(speed + speed * 0.4);\n};\n\nexport let adjlist = new Map();\n\nconst addEdge = (u, v, dist) => {\n  adjlist.get(u).push([v, dist]);\n};\n\nconst addVertex = (v) => {\n  adjlist.set(v, []);\n};\n\nconst wallVertex = (v) => {\n  let list = adjlist.get(v);\n  for (let edg of list) {\n    let lst = adjlist.get(edg[0]);\n    for (let i = 0; i < lst.length; i++) {\n      if (lst[i][0] === v) {\n        adjlist.get(edg[0]).splice(i, 1);\n        i--;\n      }\n    }\n  }\n  adjlist.set(v, []);\n};\n\nconst weightVertex = (v) => {\n  let list = adjlist.get(v);\n  adjlist.set(v, []);\n  for (let edge of list) {\n    edge[1] = 15;\n    adjlist.get(v).push(edge);\n  }\n  console.log(adjlist.get(v));\n};\n\nconst pathclr = (i, alldivs, speed) => {\n  alldivs[i].style.backgroundColor = pathnodeclr;\n  alldivs[i].style.borderColor = pathnodeclr;\n  alldivs[i].style.animation = \"popup2 250ms ease-in\";\n  sleep(speed);\n  // sleep(speed + speed * 0.4);\n};\n\nconst callvisit = (i, alldivs, speed) => {\n  setTimeout(() => {\n    pathclr(i, alldivs, speed);\n  }, 0);\n  // sleep(20);\n};\n\nexport const getweight = (a, b, adjlst) => {\n  let lst = adjlst.get(b);\n  for (let i of lst) if (i[0] === a) return i[1];\n};\n\nexport const pathcolor = (path, speed) => {\n  let divs = document.getElementsByClassName(\"nodes\");\n  console.log(divs);\n  let alldivs = [...divs];\n  console.log(alldivs);\n  // for (let i = path.length - 1; i >= 0; i--) {\n  //   alldivs[path[i] - 1].style.animation = \"\";\n  // }\n  setTimeout(() => activateit(alldivs, -1), 0);\n  for (let i = path.length - 1; i >= 0; i--) {\n    setTimeout(() => callvisit(path[i] - 1, alldivs, speed), 0);\n  }\n};\n\nconst graphsetup = () => {\n  let val = 0;\n  let arr = new Array(29);\n  for (let i = 0; i < 29; i++) {\n    arr[i] = new Array(71);\n  }\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      arr[i][j] = val;\n    }\n  }\n  for (let i = 1; i <= 2059; i++) {\n    addVertex(i);\n  }\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      let vrtx = arr[i][j];\n      if (i - 1 >= 0) {\n        addEdge(vrtx, arr[i - 1][j], 1);\n      }\n      if (j + 1 < 71) {\n        addEdge(vrtx, arr[i][j + 1], 1);\n      }\n      if (i + 1 < 29) {\n        addEdge(vrtx, arr[i + 1][j], 1);\n      }\n      if (j - 1 >= 0) {\n        addEdge(vrtx, arr[i][j - 1], 1);\n      }\n    }\n  }\n};\n\nexport const graph_init = () => {\n  graphsetup();\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i < allnodes.length; i++) {\n    if (allnodes[i].style.backgroundColor === wallnodeclr) {\n      console.log(allnodes[i].id);\n      wallVertex(i + 1);\n    }\n  }\n  let wnodes = document.getElementsByClassName(\"weight\");\n  let allwnodes = [...wnodes];\n  for (let m of allwnodes) {\n    let wn = parseInt(m.parentNode.id.slice(4));\n    console.log(wn);\n    weightVertex(wn);\n  }\n};\n",{"ruleId":"333","severity":1,"message":"334","line":5,"column":10,"nodeType":"335","messageId":"336","endLine":5,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":117,"column":6,"nodeType":"339","endLine":117,"endColumn":8,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":143,"column":15,"nodeType":"343","endLine":143,"endColumn":60},{"ruleId":"341","severity":1,"message":"342","line":148,"column":15,"nodeType":"343","endLine":148,"endColumn":60},{"ruleId":"333","severity":1,"message":"344","line":9,"column":47,"nodeType":"335","messageId":"336","endLine":9,"endColumn":54},{"ruleId":"345","severity":1,"message":"346","line":73,"column":19,"nodeType":"347","messageId":"348","endLine":73,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":74,"column":24,"nodeType":"347","messageId":"348","endLine":74,"endColumn":26},{"ruleId":"341","severity":1,"message":"342","line":107,"column":15,"nodeType":"343","endLine":107,"endColumn":60},{"ruleId":"341","severity":1,"message":"342","line":112,"column":15,"nodeType":"343","endLine":112,"endColumn":60},{"ruleId":"333","severity":1,"message":"349","line":11,"column":10,"nodeType":"335","messageId":"336","endLine":11,"endColumn":16},{"ruleId":"333","severity":1,"message":"350","line":11,"column":18,"nodeType":"335","messageId":"336","endLine":11,"endColumn":27},{"ruleId":"341","severity":1,"message":"342","line":37,"column":11,"nodeType":"343","endLine":37,"endColumn":57},{"ruleId":"333","severity":1,"message":"351","line":10,"column":3,"nodeType":"335","messageId":"336","endLine":10,"endColumn":18},{"ruleId":"337","severity":1,"message":"352","line":22,"column":6,"nodeType":"335","endLine":22,"endColumn":13},{"ruleId":"337","severity":1,"message":"353","line":22,"column":6,"nodeType":"335","endLine":22,"endColumn":13,"suggestions":"354"},{"ruleId":"345","severity":1,"message":"346","line":21,"column":11,"nodeType":"347","messageId":"348","endLine":21,"endColumn":13},{"ruleId":"345","severity":1,"message":"346","line":64,"column":27,"nodeType":"347","messageId":"348","endLine":64,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":91,"column":27,"nodeType":"347","messageId":"348","endLine":91,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":98,"column":14,"nodeType":"347","messageId":"348","endLine":98,"endColumn":16},{"ruleId":"345","severity":1,"message":"346","line":106,"column":21,"nodeType":"347","messageId":"348","endLine":106,"endColumn":23},{"ruleId":"345","severity":1,"message":"346","line":129,"column":39,"nodeType":"347","messageId":"348","endLine":129,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":149,"column":39,"nodeType":"347","messageId":"348","endLine":149,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":168,"column":54,"nodeType":"347","messageId":"348","endLine":168,"endColumn":56},{"ruleId":"345","severity":1,"message":"346","line":174,"column":54,"nodeType":"347","messageId":"348","endLine":174,"endColumn":56},{"ruleId":"345","severity":1,"message":"346","line":10,"column":26,"nodeType":"347","messageId":"348","endLine":10,"endColumn":28},{"ruleId":"345","severity":1,"message":"346","line":11,"column":42,"nodeType":"347","messageId":"348","endLine":11,"endColumn":44},{"ruleId":"345","severity":1,"message":"346","line":12,"column":53,"nodeType":"347","messageId":"348","endLine":12,"endColumn":55},{"ruleId":"345","severity":1,"message":"346","line":14,"column":64,"nodeType":"347","messageId":"348","endLine":14,"endColumn":66},{"ruleId":"345","severity":1,"message":"346","line":17,"column":25,"nodeType":"347","messageId":"348","endLine":17,"endColumn":27},{"ruleId":"345","severity":1,"message":"346","line":72,"column":26,"nodeType":"347","messageId":"348","endLine":72,"endColumn":28},{"ruleId":"345","severity":1,"message":"346","line":73,"column":42,"nodeType":"347","messageId":"348","endLine":73,"endColumn":44},{"ruleId":"345","severity":1,"message":"346","line":74,"column":53,"nodeType":"347","messageId":"348","endLine":74,"endColumn":55},{"ruleId":"345","severity":1,"message":"346","line":76,"column":64,"nodeType":"347","messageId":"348","endLine":76,"endColumn":66},{"ruleId":"345","severity":1,"message":"346","line":79,"column":25,"nodeType":"347","messageId":"348","endLine":79,"endColumn":27},{"ruleId":"345","severity":1,"message":"346","line":88,"column":32,"nodeType":"347","messageId":"348","endLine":88,"endColumn":34},{"ruleId":"345","severity":1,"message":"346","line":171,"column":11,"nodeType":"347","messageId":"348","endLine":171,"endColumn":13},{"ruleId":"345","severity":1,"message":"346","line":174,"column":11,"nodeType":"347","messageId":"348","endLine":174,"endColumn":13},{"ruleId":"345","severity":1,"message":"346","line":178,"column":18,"nodeType":"347","messageId":"348","endLine":178,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":182,"column":18,"nodeType":"347","messageId":"348","endLine":182,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":187,"column":18,"nodeType":"347","messageId":"348","endLine":187,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":189,"column":11,"nodeType":"347","messageId":"348","endLine":189,"endColumn":13},{"ruleId":"345","severity":1,"message":"346","line":193,"column":18,"nodeType":"347","messageId":"348","endLine":193,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":197,"column":18,"nodeType":"347","messageId":"348","endLine":197,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":89,"column":11,"nodeType":"343","endLine":89,"endColumn":57},{"ruleId":"333","severity":1,"message":"355","line":21,"column":9,"nodeType":"335","messageId":"336","endLine":21,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":43,"column":19,"nodeType":"347","messageId":"348","endLine":43,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":46,"column":19,"nodeType":"347","messageId":"348","endLine":46,"endColumn":21},{"ruleId":"337","severity":1,"message":"352","line":54,"column":6,"nodeType":"335","endLine":54,"endColumn":13},{"ruleId":"337","severity":1,"message":"356","line":54,"column":6,"nodeType":"335","endLine":54,"endColumn":13,"suggestions":"357"},{"ruleId":"341","severity":1,"message":"342","line":72,"column":13,"nodeType":"343","endLine":72,"endColumn":61},{"ruleId":"341","severity":1,"message":"342","line":91,"column":13,"nodeType":"343","endLine":91,"endColumn":56},{"ruleId":"341","severity":1,"message":"342","line":99,"column":13,"nodeType":"343","endLine":99,"endColumn":56},{"ruleId":"341","severity":1,"message":"342","line":155,"column":13,"nodeType":"343","endLine":155,"endColumn":56},{"ruleId":"341","severity":1,"message":"342","line":166,"column":13,"nodeType":"343","endLine":166,"endColumn":54},{"ruleId":"341","severity":1,"message":"342","line":174,"column":15,"nodeType":"343","endLine":174,"endColumn":56},{"ruleId":"341","severity":1,"message":"342","line":175,"column":15,"nodeType":"343","endLine":175,"endColumn":57},{"ruleId":"341","severity":1,"message":"342","line":176,"column":15,"nodeType":"343","endLine":176,"endColumn":56},{"ruleId":"341","severity":1,"message":"342","line":192,"column":15,"nodeType":"343","endLine":192,"endColumn":54},{"ruleId":"341","severity":1,"message":"342","line":193,"column":15,"nodeType":"343","endLine":193,"endColumn":54},{"ruleId":"345","severity":1,"message":"346","line":39,"column":13,"nodeType":"347","messageId":"348","endLine":39,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":40,"column":18,"nodeType":"347","messageId":"348","endLine":40,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":41,"column":18,"nodeType":"347","messageId":"348","endLine":41,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":42,"column":18,"nodeType":"347","messageId":"348","endLine":42,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":43,"column":18,"nodeType":"347","messageId":"348","endLine":43,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":44,"column":18,"nodeType":"347","messageId":"348","endLine":44,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":64,"column":17,"nodeType":"347","messageId":"348","endLine":64,"endColumn":19},{"ruleId":"345","severity":1,"message":"346","line":70,"column":17,"nodeType":"347","messageId":"348","endLine":70,"endColumn":19},{"ruleId":"345","severity":1,"message":"358","line":75,"column":13,"nodeType":"347","messageId":"348","endLine":75,"endColumn":15},{"ruleId":"333","severity":1,"message":"359","line":45,"column":10,"nodeType":"335","messageId":"336","endLine":45,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":53,"column":13,"nodeType":"347","messageId":"348","endLine":53,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":54,"column":18,"nodeType":"347","messageId":"348","endLine":54,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":55,"column":18,"nodeType":"347","messageId":"348","endLine":55,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":56,"column":18,"nodeType":"347","messageId":"348","endLine":56,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":57,"column":18,"nodeType":"347","messageId":"348","endLine":57,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":58,"column":18,"nodeType":"347","messageId":"348","endLine":58,"endColumn":20},{"ruleId":"333","severity":1,"message":"360","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":21},{"ruleId":"333","severity":1,"message":"361","line":1,"column":44,"nodeType":"335","messageId":"336","endLine":1,"endColumn":49},{"ruleId":"333","severity":1,"message":"362","line":1,"column":51,"nodeType":"335","messageId":"336","endLine":1,"endColumn":57},{"ruleId":"345","severity":1,"message":"346","line":13,"column":13,"nodeType":"347","messageId":"348","endLine":13,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":120,"column":13,"nodeType":"347","messageId":"348","endLine":120,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":121,"column":18,"nodeType":"347","messageId":"348","endLine":121,"endColumn":20},{"ruleId":"333","severity":1,"message":"360","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":21},{"ruleId":"333","severity":1,"message":"361","line":1,"column":44,"nodeType":"335","messageId":"336","endLine":1,"endColumn":49},{"ruleId":"333","severity":1,"message":"362","line":1,"column":51,"nodeType":"335","messageId":"336","endLine":1,"endColumn":57},{"ruleId":"333","severity":1,"message":"363","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":18},{"ruleId":"333","severity":1,"message":"364","line":28,"column":10,"nodeType":"335","messageId":"336","endLine":28,"endColumn":18},{"ruleId":"345","severity":1,"message":"346","line":40,"column":13,"nodeType":"347","messageId":"348","endLine":40,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":41,"column":18,"nodeType":"347","messageId":"348","endLine":41,"endColumn":20},{"ruleId":"333","severity":1,"message":"360","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":21},{"ruleId":"333","severity":1,"message":"361","line":1,"column":44,"nodeType":"335","messageId":"336","endLine":1,"endColumn":49},{"ruleId":"333","severity":1,"message":"362","line":1,"column":51,"nodeType":"335","messageId":"336","endLine":1,"endColumn":57},{"ruleId":"345","severity":1,"message":"346","line":30,"column":13,"nodeType":"347","messageId":"348","endLine":30,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":31,"column":18,"nodeType":"347","messageId":"348","endLine":31,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":32,"column":18,"nodeType":"347","messageId":"348","endLine":32,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":33,"column":18,"nodeType":"347","messageId":"348","endLine":33,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":34,"column":18,"nodeType":"347","messageId":"348","endLine":34,"endColumn":20},{"ruleId":"345","severity":1,"message":"358","line":90,"column":15,"nodeType":"347","messageId":"348","endLine":90,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":105,"column":9,"nodeType":"347","messageId":"348","endLine":105,"endColumn":11},{"ruleId":"345","severity":1,"message":"346","line":117,"column":13,"nodeType":"347","messageId":"348","endLine":117,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":118,"column":18,"nodeType":"347","messageId":"348","endLine":118,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":119,"column":18,"nodeType":"347","messageId":"348","endLine":119,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":120,"column":18,"nodeType":"347","messageId":"348","endLine":120,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":121,"column":18,"nodeType":"347","messageId":"348","endLine":121,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":122,"column":18,"nodeType":"347","messageId":"348","endLine":122,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":17,"column":13,"nodeType":"347","messageId":"348","endLine":17,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":167,"column":13,"nodeType":"347","messageId":"348","endLine":167,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":168,"column":18,"nodeType":"347","messageId":"348","endLine":168,"endColumn":20},{"ruleId":"333","severity":1,"message":"361","line":1,"column":38,"nodeType":"335","messageId":"336","endLine":1,"endColumn":43},{"ruleId":"333","severity":1,"message":"362","line":1,"column":45,"nodeType":"335","messageId":"336","endLine":1,"endColumn":51},{"ruleId":"333","severity":1,"message":"359","line":13,"column":10,"nodeType":"335","messageId":"336","endLine":13,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":60,"column":13,"nodeType":"347","messageId":"348","endLine":60,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":61,"column":18,"nodeType":"347","messageId":"348","endLine":61,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":62,"column":18,"nodeType":"347","messageId":"348","endLine":62,"endColumn":20},{"ruleId":"333","severity":1,"message":"365","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":13},{"ruleId":"333","severity":1,"message":"366","line":5,"column":3,"nodeType":"335","messageId":"336","endLine":5,"endColumn":16},{"ruleId":"333","severity":1,"message":"351","line":12,"column":3,"nodeType":"335","messageId":"336","endLine":12,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":13,"column":3,"nodeType":"335","messageId":"336","endLine":13,"endColumn":16},{"ruleId":"333","severity":1,"message":"368","line":14,"column":3,"nodeType":"335","messageId":"336","endLine":14,"endColumn":11},{"ruleId":"333","severity":1,"message":"369","line":15,"column":3,"nodeType":"335","messageId":"336","endLine":15,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":16,"column":3,"nodeType":"335","messageId":"336","endLine":16,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":48,"column":37,"nodeType":"347","messageId":"348","endLine":48,"endColumn":39},{"ruleId":"345","severity":1,"message":"346","line":65,"column":13,"nodeType":"347","messageId":"348","endLine":65,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":73,"column":20,"nodeType":"347","messageId":"348","endLine":73,"endColumn":22},{"ruleId":"333","severity":1,"message":"371","line":2,"column":3,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"333","severity":1,"message":"369","line":6,"column":3,"nodeType":"335","messageId":"336","endLine":6,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"372","line":18,"column":10,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":27,"column":7,"nodeType":"335","messageId":"336","endLine":27,"endColumn":17},{"ruleId":"333","severity":1,"message":"374","line":50,"column":7,"nodeType":"335","messageId":"336","endLine":50,"endColumn":12},{"ruleId":"345","severity":1,"message":"358","line":59,"column":20,"nodeType":"347","messageId":"348","endLine":59,"endColumn":22},{"ruleId":"345","severity":1,"message":"358","line":91,"column":22,"nodeType":"347","messageId":"348","endLine":91,"endColumn":24},{"ruleId":"333","severity":1,"message":"371","line":2,"column":3,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"333","severity":1,"message":"369","line":6,"column":3,"nodeType":"335","messageId":"336","endLine":6,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"372","line":18,"column":10,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":26,"column":7,"nodeType":"335","messageId":"336","endLine":26,"endColumn":17},{"ruleId":"345","severity":1,"message":"358","line":49,"column":20,"nodeType":"347","messageId":"348","endLine":49,"endColumn":22},{"ruleId":"345","severity":1,"message":"358","line":77,"column":22,"nodeType":"347","messageId":"348","endLine":77,"endColumn":24},{"ruleId":"333","severity":1,"message":"368","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":11},{"ruleId":"333","severity":1,"message":"369","line":9,"column":3,"nodeType":"335","messageId":"336","endLine":9,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":10,"column":3,"nodeType":"335","messageId":"336","endLine":10,"endColumn":14},{"ruleId":"375","severity":1,"message":"376","line":141,"column":25,"nodeType":"377","messageId":"378","endLine":153,"endColumn":6},{"ruleId":"345","severity":1,"message":"358","line":216,"column":18,"nodeType":"347","messageId":"348","endLine":216,"endColumn":20},{"ruleId":"345","severity":1,"message":"358","line":238,"column":19,"nodeType":"347","messageId":"348","endLine":238,"endColumn":21},{"ruleId":"345","severity":1,"message":"346","line":248,"column":27,"nodeType":"347","messageId":"348","endLine":248,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":248,"column":53,"nodeType":"347","messageId":"348","endLine":248,"endColumn":55},{"ruleId":"345","severity":1,"message":"346","line":286,"column":15,"nodeType":"347","messageId":"348","endLine":286,"endColumn":17},{"ruleId":"333","severity":1,"message":"373","line":333,"column":7,"nodeType":"335","messageId":"336","endLine":333,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":349,"column":35,"nodeType":"347","messageId":"348","endLine":349,"endColumn":37},{"ruleId":"345","severity":1,"message":"346","line":357,"column":35,"nodeType":"347","messageId":"348","endLine":357,"endColumn":37},{"ruleId":"345","severity":1,"message":"346","line":366,"column":35,"nodeType":"347","messageId":"348","endLine":366,"endColumn":37},{"ruleId":"333","severity":1,"message":"371","line":2,"column":3,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"333","severity":1,"message":"369","line":6,"column":3,"nodeType":"335","messageId":"336","endLine":6,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"372","line":18,"column":10,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":27,"column":7,"nodeType":"335","messageId":"336","endLine":27,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":45,"column":15,"nodeType":"347","messageId":"348","endLine":45,"endColumn":17},{"ruleId":"345","severity":1,"message":"358","line":82,"column":20,"nodeType":"347","messageId":"348","endLine":82,"endColumn":22},{"ruleId":"333","severity":1,"message":"379","line":88,"column":9,"nodeType":"335","messageId":"336","endLine":88,"endColumn":10},{"ruleId":"345","severity":1,"message":"358","line":110,"column":22,"nodeType":"347","messageId":"348","endLine":110,"endColumn":24},{"ruleId":"333","severity":1,"message":"371","line":2,"column":3,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"333","severity":1,"message":"369","line":6,"column":3,"nodeType":"335","messageId":"336","endLine":6,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"372","line":18,"column":10,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":27,"column":7,"nodeType":"335","messageId":"336","endLine":27,"endColumn":17},{"ruleId":"345","severity":1,"message":"346","line":40,"column":15,"nodeType":"347","messageId":"348","endLine":40,"endColumn":17},{"ruleId":"345","severity":1,"message":"358","line":101,"column":20,"nodeType":"347","messageId":"348","endLine":101,"endColumn":22},{"ruleId":"333","severity":1,"message":"380","line":120,"column":11,"nodeType":"335","messageId":"336","endLine":120,"endColumn":14},{"ruleId":"345","severity":1,"message":"358","line":139,"column":22,"nodeType":"347","messageId":"348","endLine":139,"endColumn":24},{"ruleId":"333","severity":1,"message":"371","line":2,"column":3,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},{"ruleId":"333","severity":1,"message":"369","line":6,"column":3,"nodeType":"335","messageId":"336","endLine":6,"endColumn":11},{"ruleId":"333","severity":1,"message":"370","line":8,"column":3,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"372","line":18,"column":10,"nodeType":"335","messageId":"336","endLine":18,"endColumn":15},{"ruleId":"333","severity":1,"message":"381","line":18,"column":29,"nodeType":"335","messageId":"336","endLine":18,"endColumn":38},{"ruleId":"333","severity":1,"message":"373","line":27,"column":7,"nodeType":"335","messageId":"336","endLine":27,"endColumn":17},{"ruleId":"345","severity":1,"message":"358","line":51,"column":20,"nodeType":"347","messageId":"348","endLine":51,"endColumn":22},{"ruleId":"345","severity":1,"message":"358","line":76,"column":22,"nodeType":"347","messageId":"348","endLine":76,"endColumn":24},{"ruleId":"345","severity":1,"message":"346","line":7,"column":15,"nodeType":"347","messageId":"348","endLine":7,"endColumn":17},{"ruleId":"333","severity":1,"message":"351","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'arrayvalue'. Either include it or remove the dependency array.","ArrayExpression",["382"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'bmbinit' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'active' is assigned a value but never used.","'setactive' is assigned a value but never used.","'normalborderclr' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'props.algonum'. Either include it or remove the dependency array.",["383"],"'currentSlide' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'showSlides', 'slideIndex', and 'tutbtns'. Either include them or remove the dependency array.",["384"],"Expected '!==' and instead saw '!='.","'waiting' is defined but never used.","'swap' is defined but never used.","'compr' is defined but never used.","'compr2' is defined but never used.","'waiting3' is defined but never used.","'waiting4' is defined but never used.","'randomwall' is defined but never used.","'randomweights' is defined but never used.","'normalnodeclr' is defined but never used.","'visited1' is defined but never used.","'visited2' is defined but never used.","'pathnodeclr' is defined but never used.","'wallnodeclr' is defined but never used.","'sleep' is defined but never used.","'callvisit2' is assigned a value but never used.","'visit' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'visited', 'stack', 'visited'.","ArrowFunctionExpression","unsafeRefs","'w' is assigned a value but never used.","'tmp' is assigned a value but never used.","'clearpath' is defined but never used.",{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},"Update the dependencies array to be: [arrayvalue]",{"range":"391","text":"392"},"Update the dependencies array to be: [props.algonum]",{"range":"393","text":"394"},"Update the dependencies array to be: [showSlides, slideIndex, tutbtns]",{"range":"395","text":"396"},[2902,2904],"[arrayvalue]",[625,632],"[props.algonum]",[1459,1466],"[showSlides, slideIndex, tutbtns]"]