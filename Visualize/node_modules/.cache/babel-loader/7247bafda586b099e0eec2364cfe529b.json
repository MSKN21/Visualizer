{"ast":null,"code":"import { sleep, gothrough, clearbar } from \"./timingfuns\";\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  sleep(speed + speed * 0.5);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\n\nfunction update(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n}\n\nfunction update1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n  setTimeout(function () {\n    bfrcolor(i, j, allbars, speed);\n  }, 0);\n  setTimeout(function () {\n    update(i, j, allbars, speed);\n  }, 0);\n  setTimeout(function () {\n    aftrcolor(i, j, allbars, speed);\n  }, 0); // sleep(10);\n}\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    update1(i, j, allbars, speed);\n  }, 0); // sleep(10);\n}\n\nconst setclr2 = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nexport const gothrough2 = (i, j, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, allbars, speed), 0);\n};\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, allbars, speed);\n  }, 0); // sleep(10);\n}\n\nlet speed2 = 25;\n\nfunction merging(vals, l, m, r, allbars, speed) {\n  console.log(\"hi\");\n  console.log(vals);\n  let n1 = parseInt(m) - parseInt(l) + 1;\n  let n2 = parseInt(r) - parseInt(m); // if (n1 == 1 && n2 == 1) {\n  //   return;\n  // }\n\n  console.log(n1, \" \", n2); // Create temp arrays\n\n  let L = [],\n      R = []; // Copy data to temp arrays L[] and R[]\n\n  for (let i = 0; i < n1; i++) {\n    console.log(\"hi1\");\n    L[i] = vals[parseInt(l) + i];\n  }\n\n  for (let j = 0; j < n2; j++) {\n    console.log(\"hi2\");\n    R[j] = vals[parseInt(m) + 1 + j];\n  }\n\n  for (let j = 0, i = 0; j < n2 || i < n1; j++, i++) {\n    if (j >= n2) j--;\n    let x = parseInt(l) + i;\n    let y = parseInt(m) + 1 + j;\n    waiting(x, y, allbars, speed2);\n  }\n\n  console.log(n1, \"  \", L);\n  console.log(n2, \"  \", R); // Merge the temp arrays back into arr[l..r]\n  // Initial index of first subarray\n\n  let i = 0; // Initial index of second subarray\n\n  let j = 0; // Initial index of merged subarray\n\n  let k = parseInt(l);\n\n  while (i < n1 && j < n2) {\n    console.log(\"hi3\");\n\n    if (L[i] <= R[j]) {\n      vals[k] = L[i];\n      i++;\n      waiting2(k, L[i - 1], allbars, speed);\n    } else {\n      vals[k] = R[j];\n      j++;\n      waiting2(k, R[j - 1], allbars, speed);\n    }\n\n    k++;\n  } // Copy the remaining elements of\n  // L[], if there are any\n\n\n  while (i < n1) {\n    console.log(\"hi4\");\n    vals[k] = L[i];\n    i++;\n    k++;\n    waiting2(k - 1, L[i - 1], allbars, speed);\n  } // Copy the remaining elements of\n  // R[], if there are any\n\n\n  while (j < n2) {\n    console.log(\"hi5\");\n    vals[k] = R[j];\n    j++;\n    k++;\n    waiting2(k - 1, R[j - 1], allbars, speed);\n  }\n\n  console.log(vals);\n} // l is for left index and r is\n// right index of the sub-array\n// of arr to be sorted */\n\n\nfunction mergesort(vals, l, r, allbars, speed) {\n  if (parseInt(l) >= parseInt(r)) {\n    return;\n  }\n\n  let m = parseInt(l) + (parseInt(r) - parseInt(l)) / 2;\n  mergesort(vals, parseInt(l), m, allbars, speed);\n  mergesort(vals, m + 1, parseInt(r), allbars, speed);\n  merging(vals, parseInt(l), m, parseInt(r), allbars, speed);\n}\n\nconst go1 = allbars => {\n  setTimeout(() => gothrough(allbars), 20);\n};\n\nconst go2 = allbars => {\n  setTimeout(() => clearbar(allbars), 20);\n};\n\nexport const merge = speed => {\n  if (speed == 15) speed2 = 50;else if (speed == 50) speed2 = 80;else if (speed > 50) speed2 = 120;else speed2 = 25;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n\n  console.log(vals);\n  let n = vals.length;\n  mergesort(vals, 0, n - 1, allbars, speed);\n  console.log(vals);\n  setTimeout(() => go1(allbars), 0);\n  setTimeout(() => go2(allbars), 0);\n};","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/mergesort.js"],"names":["sleep","gothrough","clearbar","bfrcolor","i","j","allbars","speed","style","backgroundColor","aftrcolor","update","console","log","height","pr","update1","setTimeout","waiting2","setclr2","gothrough2","waiting","speed2","merging","vals","l","m","r","n1","parseInt","n2","L","R","x","y","k","mergesort","go1","go2","merge","bars","document","getElementsByClassName","length","replace","n"],"mappings":"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","sourcesContent":["import { sleep, gothrough, clearbar } from \"./timingfuns\";\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  sleep(speed + speed * 0.5);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\n\nfunction update(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n}\n\nfunction update1(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    update(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction waiting2(i, j, allbars, speed) {\n  setTimeout(function () {\n    update1(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\nconst setclr2 = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nexport const gothrough2 = (i, j, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, allbars, speed), 0);\n};\n\nfunction waiting(i, j, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nlet speed2 = 25;\n\nfunction merging(vals, l, m, r, allbars, speed) {\n  console.log(\"hi\");\n  console.log(vals);\n  let n1 = parseInt(m) - parseInt(l) + 1;\n  let n2 = parseInt(r) - parseInt(m);\n  // if (n1 == 1 && n2 == 1) {\n  //   return;\n  // }\n  console.log(n1, \" \", n2);\n  // Create temp arrays\n  let L = [],\n    R = [];\n\n  // Copy data to temp arrays L[] and R[]\n  for (let i = 0; i < n1; i++) {\n    console.log(\"hi1\");\n\n    L[i] = vals[parseInt(l) + i];\n  }\n  for (let j = 0; j < n2; j++) {\n    console.log(\"hi2\");\n\n    R[j] = vals[parseInt(m) + 1 + j];\n  }\n\n  for (let j = 0, i = 0; j < n2 || i < n1; j++, i++) {\n    if (j >= n2) j--;\n    let x = parseInt(l) + i;\n    let y = parseInt(m) + 1 + j;\n    waiting(x, y, allbars, speed2);\n  }\n  console.log(n1, \"  \", L);\n  console.log(n2, \"  \", R);\n  // Merge the temp arrays back into arr[l..r]\n\n  // Initial index of first subarray\n  let i = 0;\n\n  // Initial index of second subarray\n  let j = 0;\n\n  // Initial index of merged subarray\n  let k = parseInt(l);\n\n  while (i < n1 && j < n2) {\n    console.log(\"hi3\");\n\n    if (L[i] <= R[j]) {\n      vals[k] = L[i];\n      i++;\n      waiting2(k, L[i - 1], allbars, speed);\n    } else {\n      vals[k] = R[j];\n      j++;\n      waiting2(k, R[j - 1], allbars, speed);\n    }\n    k++;\n  }\n\n  // Copy the remaining elements of\n  // L[], if there are any\n  while (i < n1) {\n    console.log(\"hi4\");\n\n    vals[k] = L[i];\n    i++;\n    k++;\n    waiting2(k - 1, L[i - 1], allbars, speed);\n  }\n\n  // Copy the remaining elements of\n  // R[], if there are any\n  while (j < n2) {\n    console.log(\"hi5\");\n\n    vals[k] = R[j];\n    j++;\n    k++;\n    waiting2(k - 1, R[j - 1], allbars, speed);\n  }\n  console.log(vals);\n}\n\n// l is for left index and r is\n// right index of the sub-array\n// of arr to be sorted */\nfunction mergesort(vals, l, r, allbars, speed) {\n  if (parseInt(l) >= parseInt(r)) {\n    return;\n  }\n  let m = parseInt(l) + (parseInt(r) - parseInt(l)) / 2;\n  mergesort(vals, parseInt(l), m, allbars, speed);\n  mergesort(vals, m + 1, parseInt(r), allbars, speed);\n  merging(vals, parseInt(l), m, parseInt(r), allbars, speed);\n}\nconst go1 = (allbars) => {\n  setTimeout(() => gothrough(allbars), 20);\n};\n\nconst go2 = (allbars) => {\n  setTimeout(() => clearbar(allbars), 20);\n};\n\nexport const merge = (speed) => {\n  if (speed == 15) speed2 = 50;\n  else if (speed == 50) speed2 = 80;\n  else if (speed > 50) speed2 = 120;\n  else speed2 = 25;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  mergesort(vals, 0, n - 1, allbars, speed);\n  console.log(vals);\n  setTimeout(() => go1(allbars), 0);\n  setTimeout(() => go2(allbars), 0);\n};\n"]},"metadata":{},"sourceType":"module"}