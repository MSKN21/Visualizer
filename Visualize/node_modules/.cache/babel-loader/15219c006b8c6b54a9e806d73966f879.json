{"ast":null,"code":"var _jsxFileName = \"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/tutorial.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport \"../../styles/pathfinder/tutorial.css\";\nimport pathtitle2 from \"../../storage/pathtitle2.png\";\nimport algopic from \"../../storage/algopic.png\";\nimport mazepic from \"../../storage/mazepic.png\";\nimport wallpic from \"../../storage/wallpic.png\";\nimport bmbpic from \"../../storage/bmbpic.png\";\nimport strpic from \"../../storage/strpic.png\";\nimport bombpic from \"../../storage/bombpic.png\";\nimport trgpic from \"../../storage/trgpic.png\";\nimport navpic from \"../../storage/navpic.png\";\nimport spdpic from \"../../storage/spdpic.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tutorial = props => {\n  _s();\n\n  let slideIndex = 1;\n\n  const plusSlides = n => {\n    showSlides(slideIndex += n);\n  };\n\n  const currentSlide = n => {\n    showSlides(slideIndex = n);\n  };\n\n  const showSlides = n => {\n    let slide = document.getElementsByClassName(\"mySlides\");\n    let slides = [...slide];\n    let i;\n\n    if (n > slides.length) {\n      slideIndex = 1;\n    }\n\n    if (n < 1) {\n      slideIndex = slides.length;\n    }\n\n    for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n\n    slides[slideIndex - 1].style.display = \"block\";\n  };\n\n  const tutbtns = e => {\n    e = e || window.event;\n\n    if (e.keyCode == \"37\") {\n      plusSlides(-1);\n    }\n\n    if (e.keyCode == \"39\") {\n      plusSlides(1);\n    }\n  };\n\n  useEffect(() => {\n    showSlides(slideIndex);\n    document.addEventListener(\"keydown\", tutbtns);\n  }, onclick);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => props.tutsdisp(false),\n      className: \"tut_main_div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tut_main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slideshow_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to PathFinder Visualizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This short tutorial will walk you through all of the features of this application.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"23px\"\n            },\n            children: [\"If you want to dive right in, feel free to press the \\\"Skip Tutorial\\\" button below.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), \" Otherwise, press \\\"Next\\\"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pathtitle2,\n            className: \"tut_pathtitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Picking an algorithm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose an algorithm from the \\\"Algorithms\\\" drop-down menu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: [\"Note that some algorithms are\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"unweighted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), \", while others are\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"weighted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), \". Unweighted algorithms do not take turns or weight nodes into account, whereas weighted ones do. Additionally, not all algorithms guarantee the shortest path.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: algopic,\n            className: \"tut_algopic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Picking an Maze / Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose an maze algorithm from the \\\"Mazes & Pattern\\\" drop-down menu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mazepic,\n            className: \"tut_mazepic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Meet The Algorithms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Search Algorithms.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"18px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dijkstra's Algorithm \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), \"(weighted): The father of pathfinding algorithms; guarantees the shortest path\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" A* Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), \" (weighted): Arguably the best pathfinding algorithm; uses heuristics to guarantee the shortest path much faster than Dijkstra's Algorithm\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Greedy Best-first Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), \"(weighted): A faster, more heuristic-heavy version of A*; does not guarantee the shortest path\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Breath-first Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), \" (unweighted): A great algorithm; guarantees the shortest path\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Depth-first Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), \"(unweighted): A very bad algorithm for pathfinding; does not guarantee the shortest path\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Maze Algorithms.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"18px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Randomized Prim's Algorithm: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), \"This Algorithm creates maze by connecting the vertices in a minimum spanning tree.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Randomized Krushkal's Algorithm:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), \" This Algorithm creates maze by connecting the edges that are selected randomly from list.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Randomized DFS Algorithm:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), \" This Algorithm creates maze by connecting the edges that are selected randomly from stack.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Adding walls and weights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on the grid to add a wall. DoubleClick on the grid to add a weight. Generate mazes and patterns from the \\\"Mazes & Patterns\\\" drop-down menu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: [\"Walls are impenetrable, meaning that a path cannot cross through them. Weights, however, are not impassable. They are simply more \\\"costly\\\" to move through. In this application, moving through a weight node has a \\\"cost\\\" of 15.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), \" weight node can't be added if algorithm selected is BFS or DFS\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: wallpic,\n            className: \"tut_wallpic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Adding a Bomb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click the \\\"Add Bomb\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: \"Adding a bomb will change the course of the chosen algorithm. In other words, the algorithm will first look for the bomb (in an effort to diffuse it) and will then look for the target node.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click the \\\"Remove Bomb\\\" button to remove bomb.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bmbpic,\n            className: \"tut_bmbpic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Draggable Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click and drag the start, bomb, and target nodes to move them.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tut_drags\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: strpic,\n              className: \"tut_drgpic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: bombpic,\n              className: \"tut_drgpic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: trgpic,\n              className: \"tut_drgpic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Visualizing,Clearing & Other Funcs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use the navbar buttons to visualize algorithms and to do other stuff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: \"You can clear the current path, clear walls and weights, clear the entire board, and adjust the visualization speed, all from the navbar. If you want to access this tutorial again, click on \\\"Help Button\\\" in the bottom right corner of your screen. If you want to stop animation/visualization , click on \\\"PathFinder Title\\\" in the top left corner of your screen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tut_navs\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: spdpic,\n              className: \"tut_nav1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: navpic,\n              className: \"tut_nav2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mySlides tut_info8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enjoy \\uD83D\\uDE00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I Hope You Have Fun Playing Around with this visualization tool.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tut_btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tut_btn1\",\n          onClick: () => props.tutsdisp(false),\n          children: \"Skip Tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tut_btn2\",\n          onClick: () => plusSlides(-1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => plusSlides(1),\n          className: \"tut_btn3\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tutorial, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Tutorial;\nexport default Tutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tutorial\");","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/tutorial.js"],"names":["React","useEffect","pathtitle2","algopic","mazepic","wallpic","bmbpic","strpic","bombpic","trgpic","navpic","spdpic","Tutorial","props","slideIndex","plusSlides","n","showSlides","currentSlide","slide","document","getElementsByClassName","slides","i","length","style","display","tutbtns","e","window","event","keyCode","addEventListener","onclick","tutsdisp","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport \"../../styles/pathfinder/tutorial.css\";\nimport pathtitle2 from \"../../storage/pathtitle2.png\";\nimport algopic from \"../../storage/algopic.png\";\nimport mazepic from \"../../storage/mazepic.png\";\nimport wallpic from \"../../storage/wallpic.png\";\nimport bmbpic from \"../../storage/bmbpic.png\";\nimport strpic from \"../../storage/strpic.png\";\nimport bombpic from \"../../storage/bombpic.png\";\nimport trgpic from \"../../storage/trgpic.png\";\nimport navpic from \"../../storage/navpic.png\";\nimport spdpic from \"../../storage/spdpic.png\";\nconst Tutorial = (props) => {\n  let slideIndex = 1;\n\n  const plusSlides = (n) => {\n    showSlides((slideIndex += n));\n  };\n\n  const currentSlide = (n) => {\n    showSlides((slideIndex = n));\n  };\n  const showSlides = (n) => {\n    let slide = document.getElementsByClassName(\"mySlides\");\n    let slides = [...slide];\n    let i;\n    if (n > slides.length) {\n      slideIndex = 1;\n    }\n    if (n < 1) {\n      slideIndex = slides.length;\n    }\n    for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n    slides[slideIndex - 1].style.display = \"block\";\n  };\n\n  const tutbtns = (e) => {\n    e = e || window.event;\n\n    if (e.keyCode == \"37\") {\n      plusSlides(-1);\n    }\n    if (e.keyCode == \"39\") {\n      plusSlides(1);\n    }\n  };\n\n  useEffect(() => {\n    showSlides(slideIndex);\n    document.addEventListener(\"keydown\", tutbtns);\n  }, onclick);\n\n  return (\n    <div>\n      <div onClick={() => props.tutsdisp(false)} className=\"tut_main_div\"></div>\n      <div className=\"tut_main\">\n        <div class=\"slideshow_container\">\n          <div className=\"mySlides tut_info1\">\n            <h1>Welcome to PathFinder Visualizer</h1>\n            <p>\n              This short tutorial will walk you through all of the features of\n              this application.\n            </p>\n            <p style={{ fontSize: \"23px\" }}>\n              If you want to dive right in, feel free to press the \"Skip\n              Tutorial\" button below.\n              <br /> Otherwise, press \"Next\"!\n            </p>\n            <img src={pathtitle2} className=\"tut_pathtitle\"></img>\n          </div>\n\n          <div className=\"mySlides tut_info2\">\n            <h1>Picking an algorithm</h1>\n            <p>Choose an algorithm from the \"Algorithms\" drop-down menu.</p>\n            <p style={{ fontSize: \"20px\" }}>\n              Note that some algorithms are&nbsp;\n              <i>\n                <b>unweighted</b>\n              </i>\n              , while others are&nbsp;\n              <i>\n                <b>weighted</b>\n              </i>\n              . Unweighted algorithms do not take turns or weight nodes into\n              account, whereas weighted ones do. Additionally, not all\n              algorithms guarantee the shortest path.\n            </p>\n            <img src={algopic} className=\"tut_algopic\"></img>\n          </div>\n          <div className=\"mySlides tut_info3\">\n            <h1>Picking an Maze / Pattern</h1>\n            <p>\n              Choose an maze algorithm from the \"Mazes & Pattern\" drop-down\n              menu.\n            </p>\n            <img src={mazepic} className=\"tut_mazepic\"></img>\n          </div>\n          <div className=\"mySlides tut_info4\">\n            <h1>Meet The Algorithms</h1>\n            <p>\n              <b>Search Algorithms.</b>\n            </p>\n            <p style={{ fontSize: \"18px\" }}>\n              <b>Dijkstra's Algorithm </b>(weighted): The father of pathfinding\n              algorithms; guarantees the shortest path\n              <br />\n              <b> A* Search</b> (weighted): Arguably the best pathfinding\n              algorithm; uses heuristics to guarantee the shortest path much\n              faster than Dijkstra's Algorithm\n              <br />\n              <b>Greedy Best-first Search</b>\n              (weighted): A faster, more heuristic-heavy version of A*; does not\n              guarantee the shortest path\n              <br />\n              <b>Breath-first Search</b> (unweighted): A great algorithm;\n              guarantees the shortest path\n              <br />\n              <b>Depth-first Search</b>\n              (unweighted): A very bad algorithm for pathfinding; does not\n              guarantee the shortest path\n            </p>\n            <p>\n              <b>Maze Algorithms.</b>\n            </p>\n            <p style={{ fontSize: \"18px\" }}>\n              <b>Randomized Prim's Algorithm: </b>This Algorithm creates maze by\n              connecting the vertices in a minimum spanning tree.\n              <br />\n              <b>Randomized Krushkal's Algorithm:</b> This Algorithm creates\n              maze by connecting the edges that are selected randomly from list.\n              <br />\n              <b>Randomized DFS Algorithm:</b> This Algorithm creates maze by\n              connecting the edges that are selected randomly from stack.\n            </p>\n          </div>\n          <div className=\"mySlides tut_info5\">\n            <h1>Adding walls and weights</h1>\n            <p>\n              Click on the grid to add a wall. DoubleClick on the grid to add a\n              weight. Generate mazes and patterns from the \"Mazes & Patterns\"\n              drop-down menu.\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              Walls are impenetrable, meaning that a path cannot cross through\n              them. Weights, however, are not impassable. They are simply more\n              \"costly\" to move through. In this application, moving through a\n              weight node has a \"cost\" of 15.\n              <br />\n              <b>Note:</b> weight node can't be added if algorithm selected is\n              BFS or DFS\n            </p>\n            <img src={wallpic} className=\"tut_wallpic\"></img>\n          </div>\n          <div className=\"mySlides tut_info6\">\n            <h1>Adding a Bomb</h1>\n            <p>Click the \"Add Bomb\" button.</p>\n            <p style={{ fontSize: \"20px\" }}>\n              Adding a bomb will change the course of the chosen algorithm. In\n              other words, the algorithm will first look for the bomb (in an\n              effort to diffuse it) and will then look for the target node.\n            </p>\n            <p>Click the \"Remove Bomb\" button to remove bomb.</p>\n            <img src={bmbpic} className=\"tut_bmbpic\"></img>\n          </div>\n          <div className=\"mySlides tut_info7\">\n            <h1>Draggable Nodes</h1>\n            <p>\n              Click and drag the start, bomb, and target nodes to move them.\n            </p>\n            <div className=\"tut_drags\">\n              <img src={strpic} className=\"tut_drgpic\"></img>\n              <img src={bombpic} className=\"tut_drgpic\"></img>\n              <img src={trgpic} className=\"tut_drgpic\"></img>\n            </div>\n            <h1>Visualizing,Clearing & Other Funcs.</h1>\n            <p>\n              Use the navbar buttons to visualize algorithms and to do other\n              stuff\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              You can clear the current path, clear walls and weights, clear the\n              entire board, and adjust the visualization speed, all from the\n              navbar. If you want to access this tutorial again, click on \"Help\n              Button\" in the bottom right corner of your screen. If you want to\n              stop animation/visualization , click on \"PathFinder Title\" in the\n              top left corner of your screen.\n            </p>\n            <div className=\"tut_navs\">\n              <img src={spdpic} className=\"tut_nav1\"></img>\n              <img src={navpic} className=\"tut_nav2\"></img>\n            </div>\n          </div>\n          <div className=\"mySlides tut_info8\">\n            <h1>Enjoy &#128512;</h1>\n            <p>\n              I Hope You Have Fun Playing Around with this visualization tool.\n            </p>\n          </div>\n        </div>\n        <div className=\"tut_btns\">\n          <div className=\"tut_btn1\" onClick={() => props.tutsdisp(false)}>\n            Skip Tutorial\n          </div>\n          <div className=\"tut_btn2\" onClick={() => plusSlides(-1)}>\n            Previous\n          </div>\n          <div onClick={() => plusSlides(1)} className=\"tut_btn3\">\n            Next\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tutorial;\n"]},"metadata":{},"sourceType":"module"}