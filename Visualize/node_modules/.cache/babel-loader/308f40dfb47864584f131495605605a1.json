{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{wallnodeclr,normalborderclr,normalnodeclr,visited1,visited2,visited3,pathnodeclr}from\"../colors\";import{adjlist,graph_init,pathcolor,visitclr,getweight}from\"./gridsetup\";import{sleep,activateit}from\"../clearfuncs\";var callvisit=function callvisit(i,alldivs,speed,clr){setTimeout(function(){visitclr(i,alldivs,speed,clr);},0);// sleep(20);\n};var callvisit2=function callvisit2(i,alldivs,speed,clr){setTimeout(function(){callvisit(i,alldivs,speed,clr);},0);// sleep(20);\n};var activateit2=function activateit2(alldivs,val,i,speed,clr){setTimeout(function(){return activateit(alldivs,val);},0);setTimeout(function(){return callvisit(i,alldivs,speed,clr);},0);};var getcoord=function getcoord(x){var val=0;var arr=new Array(2);for(var i=0;i<29;i++){for(var j=0;j<71;j++){val++;if(val==x){arr[0]=i;arr[1]=j;return arr;}}}};var herucalc=function herucalc(a,b){var first=getcoord(a);var last=getcoord(b);var hval=Math.abs(last[1]-first[1])+Math.abs(last[0]-first[0]);return hval;};var sortFunction=function sortFunction(a,b){if(a[0]===b[0]){return 0;}else{return a[0]<b[0]?-1:1;}};var startGBFS=function startGBFS(u,dest,speed,clr){var dist=new Array(2100).fill(50000);var prev=new Array(2100).fill(-1);var visit=new Array(2100).fill(0);var novst=0;var totdst=0;var st=[];var m=herucalc(u,dest);st.push([m,u]);dist[u]=m;var divs=document.getElementsByClassName(\"nodes\");var alldivs=_toConsumableArray(divs);var _loop=function _loop(){st.sort(sortFunction);var now=st[0];st.shift();var v=now[1];var w=now[0];visit[v]=1;setTimeout(function(){return activateit2(alldivs,alldivs[v-1],v-1,speed*2,clr);},0);novst++;if(v===dest)return\"break\";var edges=adjlist.get(v);var _iterator=_createForOfIteratorHelper(edges),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var to=_step.value;if(visit[to[0]]===0){visit[to[0]]=1;dist[to[0]]=herucalc(to[0],dest);prev[to[0]]=v;st.push([dist[to[0]],to[0]]);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};while(st.length!=0){var _ret=_loop();if(_ret===\"break\")break;}var path=[];var crawl=dest;path.push(crawl);while(prev[crawl]!=-1){path.push(prev[crawl]);totdst+=getweight(crawl,prev[crawl],adjlist);crawl=prev[crawl];}console.log(path);return[novst,totdst,path];};export var gbfs=function gbfs(speed,bmb){graph_init();var src=parseInt(document.getElementById(\"source\").parentNode.id.slice(4));var dst=parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));var bomb;if(bmb){bomb=parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));var a,b;a=startGBFS(src,bomb,speed,visited3);if(a[2][a[2].length-1]===src)b=startGBFS(bomb,dst,speed,visited1);setTimeout(function(){return pathcolor(a[2],speed*2);},0);if(a[2][a[2].length-1]===src)setTimeout(function(){return pathcolor(b[2],speed*2);},0);var res;if(a[2][a[2].length-1]===src)res=[a[0]+b[0],a[1]+b[1]];else return[a[0],0];return res;}var ar=startGBFS(src,dst,speed,visited1);setTimeout(function(){return pathcolor(ar[2],speed*2);},0);return ar;};","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/greedybfs.js"],"names":["wallnodeclr","normalborderclr","normalnodeclr","visited1","visited2","visited3","pathnodeclr","adjlist","graph_init","pathcolor","visitclr","getweight","sleep","activateit","callvisit","i","alldivs","speed","clr","setTimeout","callvisit2","activateit2","val","getcoord","x","arr","Array","j","herucalc","a","b","first","last","hval","Math","abs","sortFunction","startGBFS","u","dest","dist","fill","prev","visit","novst","totdst","st","m","push","divs","document","getElementsByClassName","sort","now","shift","v","w","edges","get","to","length","path","crawl","console","log","gbfs","bmb","src","parseInt","getElementById","parentNode","id","slice","dst","bomb","res","ar"],"mappings":"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","sourcesContent":["import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst getcoord = (x) => {\n  let val = 0;\n  let arr = new Array(2);\n  for (let i = 0; i < 29; i++) {\n    for (let j = 0; j < 71; j++) {\n      val++;\n      if (val == x) {\n        arr[0] = i;\n        arr[1] = j;\n        return arr;\n      }\n    }\n  }\n};\n\nconst herucalc = (a, b) => {\n  let first = getcoord(a);\n  let last = getcoord(b);\n  let hval = Math.abs(last[1] - first[1]) + Math.abs(last[0] - first[0]);\n  return hval;\n};\n\nconst sortFunction = (a, b) => {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nconst startGBFS = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let novst = 0;\n  let totdst = 0;\n  let st = [];\n  let m = herucalc(u, dest);\n  st.push([m, u]);\n  dist[u] = m;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    st.sort(sortFunction);\n    let now = st[0];\n    st.shift();\n\n    let v = now[1];\n    let w = now[0];\n    visit[v] = 1;\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      if (visit[to[0]] === 0) {\n        visit[to[0]] = 1;\n        dist[to[0]] = herucalc(to[0], dest);\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n  return [novst, totdst, path];\n};\n\nexport const gbfs = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startGBFS(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src)\n      b = startGBFS(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startGBFS(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n"]},"metadata":{},"sourceType":"module"}