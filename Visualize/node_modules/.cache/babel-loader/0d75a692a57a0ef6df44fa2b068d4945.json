{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{wallnodeclr,normalborderclr,normalnodeclr,visited1,visited2,visited3,pathnodeclr}from\"../colors\";import{adjlist,graph_init,pathcolor,visitclr,getweight}from\"./gridsetup\";import{sleep,activateit}from\"../clearfuncs\";var callvisit=function callvisit(i,alldivs,speed,clr){setTimeout(function(){visitclr(i,alldivs,speed,clr);},0);// sleep(20);\n};var callvisit2=function callvisit2(i,alldivs,speed,clr){setTimeout(function(){callvisit(i,alldivs,speed,clr);},0);// sleep(20);\n};var sortFunction=function sortFunction(a,b){if(a[0]===b[0]){return 0;}else{return a[0]<b[0]?-1:1;}};var activateit2=function activateit2(alldivs,val,i,speed,clr){setTimeout(function(){return activateit(alldivs,val);},0);setTimeout(function(){return callvisit(i,alldivs,speed,clr);},0);};var startDijkstra=function startDijkstra(u,dest,speed,clr){var dist=new Array(2100).fill(50000);var prev=new Array(2100).fill(-1);var visit=new Array(2100).fill(0);var st=[];var novst=0;var totdst=0;st.push([0,u]);dist[u]=0;var divs=document.getElementsByClassName(\"nodes\");var alldivs=_toConsumableArray(divs);var _loop=function _loop(){st.sort(sortFunction);var now=st[0];st.shift();var v=now[1];var w=now[0];setTimeout(function(){return activateit2(alldivs,alldivs[v-1],v-1,speed*2,clr);},0);novst++;if(v===dest)return\"break\";var edges=adjlist.get(v);var _iterator=_createForOfIteratorHelper(edges),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var to=_step.value;if(w+to[1]<dist[to[0]]){for(i=0;i<st.length;i++){if(st[i][0]===dist[to[0]]&&st[i][1]===to[0]){st.splice(i,1);}}dist[to[0]]=w+to[1];prev[to[0]]=v;st.push([dist[to[0]],to[0]]);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};while(st.length!=0){var i;var _ret=_loop();if(_ret===\"break\")break;}var path=[];var crawl=dest;path.push(crawl);while(prev[crawl]!=-1){path.push(prev[crawl]);totdst+=getweight(crawl,prev[crawl],adjlist);crawl=prev[crawl];}console.log(path);return[novst,totdst,path];};export var dijkstras=function dijkstras(speed,bmb){graph_init();var src=parseInt(document.getElementById(\"source\").parentNode.id.slice(4));var dst=parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));var bomb;if(bmb){bomb=parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));var a,b;a=startDijkstra(src,bomb,speed,visited3);if(a[2][a[2].length-1]===src)b=startDijkstra(bomb,dst,speed,visited1);setTimeout(function(){return pathcolor(a[2],speed*2);},0);if(a[2][a[2].length-1]===src)setTimeout(function(){return pathcolor(b[2],speed*2);},0);var res;if(a[2][a[2].length-1]===src)res=[a[0]+b[0],a[1]+b[1]];else return[a[0],0];return res;}var ar=startDijkstra(src,dst,speed,visited1);setTimeout(function(){return pathcolor(ar[2],speed*2);},0);return ar;};","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/algorithms/dijkstra.js"],"names":["wallnodeclr","normalborderclr","normalnodeclr","visited1","visited2","visited3","pathnodeclr","adjlist","graph_init","pathcolor","visitclr","getweight","sleep","activateit","callvisit","i","alldivs","speed","clr","setTimeout","callvisit2","sortFunction","a","b","activateit2","val","startDijkstra","u","dest","dist","Array","fill","prev","visit","st","novst","totdst","push","divs","document","getElementsByClassName","sort","now","shift","v","w","edges","get","to","length","splice","path","crawl","console","log","dijkstras","bmb","src","parseInt","getElementById","parentNode","id","slice","dst","bomb","res","ar"],"mappings":"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","sourcesContent":["import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"../colors\";\n\nimport {\n  adjlist,\n  graph_init,\n  pathcolor,\n  visitclr,\n  getweight,\n} from \"./gridsetup\";\nimport { sleep, activateit } from \"../clearfuncs\";\n\nconst callvisit = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    visitclr(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst callvisit2 = (i, alldivs, speed, clr) => {\n  setTimeout(() => {\n    callvisit(i, alldivs, speed, clr);\n  }, 0);\n  // sleep(20);\n};\n\nconst sortFunction = (a, b) => {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nconst activateit2 = (alldivs, val, i, speed, clr) => {\n  setTimeout(() => activateit(alldivs, val), 0);\n  setTimeout(() => callvisit(i, alldivs, speed, clr), 0);\n};\n\nconst startDijkstra = (u, dest, speed, clr) => {\n  let dist = new Array(2100).fill(50000);\n  let prev = new Array(2100).fill(-1);\n  let visit = new Array(2100).fill(0);\n  let st = [];\n  let novst = 0;\n  let totdst = 0;\n  st.push([0, u]);\n  dist[u] = 0;\n  let divs = document.getElementsByClassName(\"nodes\");\n  let alldivs = [...divs];\n\n  while (st.length != 0) {\n    st.sort(sortFunction);\n    let now = st[0];\n    st.shift();\n\n    let v = now[1];\n    let w = now[0];\n\n    setTimeout(\n      () => activateit2(alldivs, alldivs[v - 1], v - 1, speed * 2, clr),\n      0\n    );\n    novst++;\n    if (v === dest) break;\n\n    let edges = adjlist.get(v);\n    for (let to of edges) {\n      if (w + to[1] < dist[to[0]]) {\n        for (var i = 0; i < st.length; i++) {\n          if (st[i][0] === dist[to[0]] && st[i][1] === to[0]) {\n            st.splice(i, 1);\n          }\n        }\n        dist[to[0]] = w + to[1];\n        prev[to[0]] = v;\n        st.push([dist[to[0]], to[0]]);\n      }\n    }\n  }\n  let path = [];\n  let crawl = dest;\n  path.push(crawl);\n  while (prev[crawl] != -1) {\n    path.push(prev[crawl]);\n    totdst += getweight(crawl, prev[crawl], adjlist);\n    crawl = prev[crawl];\n  }\n  console.log(path);\n\n  return [novst, totdst, path];\n};\n\nexport const dijkstras = (speed, bmb) => {\n  graph_init();\n  let src = parseInt(document.getElementById(\"source\").parentNode.id.slice(4));\n  let dst = parseInt(document.getElementById(\"dest\").parentNode.id.slice(4));\n  let bomb;\n  if (bmb) {\n    bomb = parseInt(document.getElementById(\"bomb\").parentNode.id.slice(4));\n    let a, b;\n    a = startDijkstra(src, bomb, speed, visited3);\n    if (a[2][a[2].length - 1] === src)\n      b = startDijkstra(bomb, dst, speed, visited1);\n    setTimeout(() => pathcolor(a[2], speed * 2), 0);\n    if (a[2][a[2].length - 1] === src)\n      setTimeout(() => pathcolor(b[2], speed * 2), 0);\n    let res;\n    if (a[2][a[2].length - 1] === src) res = [a[0] + b[0], a[1] + b[1]];\n    else return [a[0], 0];\n    return res;\n  }\n  let ar = startDijkstra(src, dst, speed, visited1);\n  setTimeout(() => pathcolor(ar[2], speed * 2), 0);\n  return ar;\n};\n"]},"metadata":{},"sourceType":"module"}