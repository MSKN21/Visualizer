{"ast":null,"code":"import { wallnodeclr, normalborderclr, normalnodeclr, visited1, visited2, visited3, pathnodeclr } from \"./colors\";\nexport const sleep = milliseconds => {\n  const date = Date.now();\n  let currentDate = null;\n\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n};\n\nconst clearanimation = (allnodes, val) => {\n  console.log(\"hi\");\n\n  if (val == -1) {\n    for (let i = 0; i <= 2058; i++) {\n      allnodes[i].style.animation = \"\";\n    }\n  } else {\n    val.style.animation = \"\";\n  }\n};\n\nexport const activateit = (allnodes, val) => {\n  setTimeout(() => {\n    clearanimation(allnodes, val);\n  }, 0); // sleep(25);\n};\nexport const clearpath = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n\n    if (color === visited1 || color === visited2 || color === visited3 || color === pathnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n\n  clearanimation(allnodes, -1);\n};\nexport const clearwalls_nodes = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n\n    if (i.children.length == 1 && i.children[0].className === \"weight\") {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n\n  clearanimation(allnodes, -1);\n};\n\nconst points = (node, str) => {\n  let a = new DOMParser();\n  let y = a.parseFromString(str, \"text/html\");\n  console.log(y.body.firstChild);\n  node.style.backgroundColor = normalnodeclr;\n  node.append(y.body.firstChild);\n};\n\nexport const clearboard = () => {\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n\n    if (i.children.length == 1) {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n\n  for (let i of allnodes) {\n    if (i.id == \"node860\") {\n      console.log(\"860\");\n      let src = `<div draggable=\"true\" id=\"source\">\n          <i class=\"fa fa-chevron-right\"></i>\n        </div>`;\n      points(i, src);\n      i.style.animation = \"popup 250ms ease-out\";\n    } else if (i.id == \"node915\") {\n      console.log(\"915\");\n      let dest = `<div draggable=\"true\" id=\"dest\">\n          <i class=\"fa fa-bullseye\"></i>\n        </div>`;\n      points(i, dest);\n      i.style.animation = \"popup 250ms ease-out\";\n    }\n  }\n\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nconst randomnum = () => {\n  return Math.floor(Math.random() * (2057 - 2 + 1) + 2);\n};\n\nexport const randomwall = () => {\n  clearwalls_nodes();\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n\n    if (allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\nexport const randomweights = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i = 0; i <= 500; i++) {\n    let val = randomnum();\n    console.log(val);\n\n    if (allnodes[val].children.length == 0) {\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\nexport const randomweightsnwalls = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n    console.log(val);\n\n    if (i % 2 === 1 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = normalnodeclr;\n      allnodes[val].style.borderColor = normalborderclr;\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n\n    if (i % 2 === 0 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n\n  setTimeout(() => activateit(allnodes, -1), 0);\n};","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/pathfinder/clearfuncs.js"],"names":["wallnodeclr","normalborderclr","normalnodeclr","visited1","visited2","visited3","pathnodeclr","sleep","milliseconds","date","Date","now","currentDate","clearanimation","allnodes","val","console","log","i","style","animation","activateit","setTimeout","clearpath","nodes","document","getElementsByClassName","color","backgroundColor","borderColor","clearwalls_nodes","children","length","className","remove","points","node","str","a","DOMParser","y","parseFromString","body","firstChild","append","clearboard","id","src","dest","randomnum","Math","floor","random","randomwall","randomweights","w","randomweightsnwalls"],"mappings":"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","sourcesContent":["import {\n  wallnodeclr,\n  normalborderclr,\n  normalnodeclr,\n  visited1,\n  visited2,\n  visited3,\n  pathnodeclr,\n} from \"./colors\";\n\nexport const sleep = (milliseconds) => {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n};\n\nconst clearanimation = (allnodes, val) => {\n  console.log(\"hi\");\n  if (val == -1) {\n    for (let i = 0; i <= 2058; i++) {\n      allnodes[i].style.animation = \"\";\n    }\n  } else {\n    val.style.animation = \"\";\n  }\n};\n\nexport const activateit = (allnodes, val) => {\n  setTimeout(() => {\n    clearanimation(allnodes, val);\n  }, 0);\n  // sleep(25);\n};\n\nexport const clearpath = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (\n      color === visited1 ||\n      color === visited2 ||\n      color === visited3 ||\n      color === pathnodeclr\n    ) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  clearanimation(allnodes, -1);\n};\n\nexport const clearwalls_nodes = () => {\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n    if (i.children.length == 1 && i.children[0].className === \"weight\") {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  clearanimation(allnodes, -1);\n};\n\nconst points = (node, str) => {\n  let a = new DOMParser();\n  let y = a.parseFromString(str, \"text/html\");\n  console.log(y.body.firstChild);\n  node.style.backgroundColor = normalnodeclr;\n  node.append(y.body.firstChild);\n};\n\nexport const clearboard = () => {\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i of allnodes) {\n    let color = i.style.backgroundColor;\n    if (color === wallnodeclr) {\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n    if (i.children.length == 1) {\n      i.children[0].remove();\n      i.style.backgroundColor = normalnodeclr;\n      i.style.borderColor = normalborderclr;\n    }\n  }\n  for (let i of allnodes) {\n    if (i.id == \"node860\") {\n      console.log(\"860\");\n      let src = `<div draggable=\"true\" id=\"source\">\n          <i class=\"fa fa-chevron-right\"></i>\n        </div>`;\n\n      points(i, src);\n      i.style.animation = \"popup 250ms ease-out\";\n    } else if (i.id == \"node915\") {\n      console.log(\"915\");\n      let dest = `<div draggable=\"true\" id=\"dest\">\n          <i class=\"fa fa-bullseye\"></i>\n        </div>`;\n      points(i, dest);\n      i.style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nconst randomnum = () => {\n  return Math.floor(Math.random() * (2057 - 2 + 1) + 2);\n};\n\nexport const randomwall = () => {\n  clearwalls_nodes();\n  clearpath();\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n    if (allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nexport const randomweights = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 500; i++) {\n    let val = randomnum();\n    console.log(val);\n    if (allnodes[val].children.length == 0) {\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n\nexport const randomweightsnwalls = () => {\n  clearwalls_nodes();\n  clearpath();\n  let w = `<div class=\"weight\">\n      <i class=\"fas fa-weight-hanging\"></i>\n    </div>`;\n  let nodes = document.getElementsByClassName(\"nodes\");\n  let allnodes = [...nodes];\n  for (let i = 0; i <= 750; i++) {\n    let val = randomnum();\n    console.log(val);\n    if (i % 2 === 1 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = normalnodeclr;\n      allnodes[val].style.borderColor = normalborderclr;\n      points(allnodes[val], w);\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n    if (i % 2 === 0 && allnodes[val].children.length == 0) {\n      allnodes[val].style.backgroundColor = wallnodeclr;\n      allnodes[val].style.borderColor = wallnodeclr;\n      allnodes[val].style.animation = \"popup 250ms ease-out\";\n    }\n  }\n  setTimeout(() => activateit(allnodes, -1), 0);\n};\n"]},"metadata":{},"sourceType":"module"}