{"ast":null,"code":"import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nfunction updat(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  sleep(speed);\n}\n\nconst bfrcolor = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n  sleep(speed + speed * pr);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\n\nfunction update2(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n  setTimeout(function () {\n    bfrcolor(i, i, allbars, speed);\n  }, 0);\n  setTimeout(function () {\n    updat(i, j, allbars, speed);\n  }, 0);\n  setTimeout(function () {\n    aftrcolor(i, i, allbars, speed);\n  }, 0); //   sleep(10);\n}\n\nfunction waiting5(i, j, allbars, speed) {\n  setTimeout(function () {\n    update2(i, j, allbars, speed);\n  }, 0); //   sleep(1);\n}\n\nlet speed2 = 20;\n\nconst setclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  allbars[k].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nconst bacclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[k].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed / 2);\n};\n\nexport const gothrough2 = (i, j, k, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, k, allbars, speed), 0);\n  setTimeout(() => bacclr2(i, j, k, allbars, speed), 0);\n};\n\nfunction waiting(i, j, k, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, k, allbars, speed);\n  }, 0); // sleep(10);\n}\n\nfunction getMax(vals, n) {\n  let mx = vals[0];\n\n  for (let i = 1; i < parseInt(n); i++) if (vals[i] > mx) mx = vals[i];\n\n  return mx;\n}\n\nfunction countSort(vals, n, exp, allbars, speed) {\n  let output = []; // output valsay\n\n  let i,\n      count = [];\n\n  for (let j = 0; j < 10; j++) {\n    count[j] = 0;\n  }\n\n  for (i = 0; i < parseInt(n); i++) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    count[num2 % 10]++;\n  }\n\n  for (i = 1; i < 10; i++) count[i] += count[i - 1];\n\n  for (i = parseInt(n) - 1; i >= 0; i--) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    output[count[num2 % 10] - 1] = vals[i];\n    count[num2 % 10]--;\n  }\n\n  for (i = 0; i < n - 2; i++) {\n    waiting(i, i + 1, i + 2, allbars, speed2);\n  }\n\n  for (i = 0; i < n; i++) {\n    vals[i] = output[i];\n    waiting5(i, output[i], allbars, speed);\n  }\n\n  console.log(vals);\n}\n\nfunction radixsort(vals, n, allbars, speed) {\n  let m = parseInt(getMax(vals, parseInt(n)));\n\n  for (let exp = 1; Math.floor(parseInt(m / exp)) > 0; exp *= 10) {\n    countSort(vals, parseInt(n), exp, allbars, speed);\n  }\n}\n\nexport const radix = speed => {\n  if (speed == 15) speed2 = 50;else if (speed == 50) speed2 = 50;else if (speed > 50) speed2 = 120;else speed2 = 20;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n\n  console.log(vals);\n  let n = vals.length;\n  radixsort(vals, n, allbars, speed);\n  console.log(vals);\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};","map":{"version":3,"sources":["/home/saikrupananda/vscode/LiveSites/Visualizer/Visualize/src/components/sorting/sorts/radixsort.js"],"names":["sleep","swap","gothrough","clearbar","compr","compr2","updat","i","j","allbars","speed","console","log","style","height","bfrcolor","backgroundColor","pr","aftrcolor","update2","setTimeout","waiting5","speed2","setclr2","k","bacclr2","gothrough2","waiting","getMax","vals","n","mx","parseInt","countSort","exp","output","count","num","num2","Math","floor","radixsort","m","radix","bars","document","getElementsByClassName","length","replace"],"mappings":"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","sourcesContent":["import { sleep, swap, gothrough, clearbar, compr, compr2 } from \"./timingfuns\";\n\nfunction updat(i, j, allbars, speed) {\n  console.log(i, \" key \", j);\n  allbars[i].style.height = j + \"px\";\n  sleep(speed);\n}\nconst bfrcolor = (i, j, allbars, speed) => {\n  console.log(i, \" \", j);\n  allbars[i].style.backgroundColor = \"rgb(255, 119, 119)\";\n  allbars[j].style.backgroundColor = \"rgb(255, 119, 119)\";\n  let pr = 0.5;\n  if (speed == 5) pr = 2;\n  sleep(speed + speed * pr);\n  sleep(speed + speed * pr);\n};\n\nconst aftrcolor = (i, j, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed + speed * 0.5);\n};\nfunction update2(i, j, allbars, speed) {\n  console.log(i, \" \", j);\n\n  setTimeout(function () {\n    bfrcolor(i, i, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    updat(i, j, allbars, speed);\n  }, 0);\n\n  setTimeout(function () {\n    aftrcolor(i, i, allbars, speed);\n  }, 0);\n  //   sleep(10);\n}\n\nfunction waiting5(i, j, allbars, speed) {\n  setTimeout(function () {\n    update2(i, j, allbars, speed);\n  }, 0);\n  //   sleep(1);\n}\nlet speed2 = 20;\nconst setclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"lightgreen\";\n  allbars[j].style.backgroundColor = \"lightgreen\";\n  allbars[k].style.backgroundColor = \"lightgreen\";\n  sleep(speed);\n};\n\nconst bacclr2 = (i, j, k, allbars, speed) => {\n  allbars[i].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[j].style.backgroundColor = \"rgb(130, 177, 253)\";\n  allbars[k].style.backgroundColor = \"rgb(130, 177, 253)\";\n  sleep(speed / 2);\n};\n\nexport const gothrough2 = (i, j, k, allbars, speed) => {\n  setTimeout(() => setclr2(i, j, k, allbars, speed), 0);\n  setTimeout(() => bacclr2(i, j, k, allbars, speed), 0);\n};\n\nfunction waiting(i, j, k, allbars, speed) {\n  setTimeout(function () {\n    gothrough2(i, j, k, allbars, speed);\n  }, 0);\n  // sleep(10);\n}\n\nfunction getMax(vals, n) {\n  let mx = vals[0];\n  for (let i = 1; i < parseInt(n); i++) if (vals[i] > mx) mx = vals[i];\n  return mx;\n}\n\nfunction countSort(vals, n, exp, allbars, speed) {\n  let output = []; // output valsay\n  let i,\n    count = [];\n  for (let j = 0; j < 10; j++) {\n    count[j] = 0;\n  }\n\n  for (i = 0; i < parseInt(n); i++) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    count[num2 % 10]++;\n  }\n\n  for (i = 1; i < 10; i++) count[i] += count[i - 1];\n\n  for (i = parseInt(n) - 1; i >= 0; i--) {\n    let num = vals[i] / parseInt(exp);\n    let num2 = Math.floor(num);\n    output[count[num2 % 10] - 1] = vals[i];\n    count[num2 % 10]--;\n  }\n  for (i = 0; i < n - 2; i++) {\n    waiting(i, i + 1, i + 2, allbars, speed2);\n  }\n  for (i = 0; i < n; i++) {\n    vals[i] = output[i];\n    waiting5(i, output[i], allbars, speed);\n  }\n  console.log(vals);\n}\n\nfunction radixsort(vals, n, allbars, speed) {\n  let m = parseInt(getMax(vals, parseInt(n)));\n\n  for (let exp = 1; Math.floor(parseInt(m / exp)) > 0; exp *= 10) {\n    countSort(vals, parseInt(n), exp, allbars, speed);\n  }\n}\n\nexport const radix = (speed) => {\n  if (speed == 15) speed2 = 50;\n  else if (speed == 50) speed2 = 50;\n  else if (speed > 50) speed2 = 120;\n  else speed2 = 20;\n  let bars = document.getElementsByClassName(\"bars\");\n  console.log(bars);\n  let allbars = [...bars];\n  let vals = [];\n  for (let i = 0; i < allbars.length; i++) {\n    vals[i] = parseInt(allbars[i].style.height.replace(\"px\", \"\"));\n  }\n  console.log(vals);\n  let n = vals.length;\n  radixsort(vals, n, allbars, speed);\n  console.log(vals);\n  setTimeout(() => gothrough(allbars), 10);\n  setTimeout(() => clearbar(allbars), 10);\n};\n"]},"metadata":{},"sourceType":"module"}